{"version":3,"sources":["modules/window/index.js","modules/store.js","classes/circle.js","classes/canvas.js","components/canvas/GroupCircle.js","containers/canvas/GroupCircle.js","components/home/HomeTopScreen.js","containers/home/HomeTopScreen.js","containers/AppRoute.js","components/AppRoute.js","components/App.js","serviceWorker.js","index.js"],"names":["RESIZE_WINDOW","prefix","initialState","windowHeight","window","innerHeight","windowWidth","innerWidth","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","createStore","reduxCreateStore","combineReducers","applyMiddleware","thunk","logger","optionStore","Circle","drawCircle","_assertThisInitialize","assertThisInitialized","_this","context","name","positionX","positionY","size","color","setFillCanvas","arc","Math","PI","fill","push","x","y","setText","_assertThisInitialize2","beginPath","font","fillStyle","textAlign","fillText","startClickAnimation","props","timestamp","_assertThisInitialize3","console","log","circle","requestAnimationFrame","onClick","e","clientX","clientY","_assertThisInitialize4","rect","target","getBoundingClientRect","clickX","left","clickY","top","pow","history","Canvas","canvasContext","this","classCallCheck","GroupCircle","_this$props","setRef","onCircleClick","canvas","onResize","setCircle","addEventListener","react_default","a","createElement","className","css","styles","wrapper","ref","width","height","Component","StyleSheet","create","backgroundColor","display","component","initialProps","stateHandler","handleChange","ownProps","value","defineProperty","h","w","handleProps","refs","event","getRefs","ctx","getContext","circleOptions","ua","navigator","userAgent","toLowerCase","i","circleOption","responsiveX","responsiveY","responsiveSize","match","_optionStore$i","lifeCycle","componentDidMount","componentDidUpdate","_this$props2","queue","clearTimeout","setTimeout","Enhance","compose","setDisplayName","withStateHandlers","withHandlers","connect","dispatch","lifecycle","onlyUpdateForKeys","HomeTopScreen","react","container","textContainer","simpleText","style","canvas_GroupCircle","alignItems","justifyContent","BrowserRouter","Route","exact","path","_state$window","App","react_redux_es","store","containers_AppRoute","Boolean","location","hostname","ReactDOM","render","App_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af7f5cf2.chunk.js","sourcesContent":["import { dispatch } from \"rxjs/internal/observable/range\";\n\nconst prefix = 'portfolio/window/'\n\nconst RESIZE_WINDOW = prefix + 'RESIZE_WINDOW'\n\nconst initialState = {\n    windowHeight: window.innerHeight,\n    windowWidth: window.innerWidth < 600 ? window.innerWidth : 600,\n}\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case RESIZE_WINDOW:\n            const {\n                windowHeight,\n                windowWidth,\n            } = action\n            return {\n                ...state,\n                windowHeight,\n                windowWidth\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport const resizeWindow = (h, w) => ({\n    type: RESIZE_WINDOW,\n    windowHeight: h,\n    windowWidth: w\n})","import { createStore as reduxCreateStore, applyMiddleware, combineReducers } from 'redux'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nimport window from './window'\n\nfunction createStore() {\n  const store = reduxCreateStore(\n    combineReducers({\n      window\n    }),\n    applyMiddleware(\n      thunk,\n      logger,\n    )\n  );\n  \n  return store;\n}\n\nexport default createStore()","import Canvas from './canvas'\n\n// クリックされた時の処理用にx座標とy座標とsizeを保存しておく\nexport let optionStore = []\n\nexport default class Circle extends Canvas {\n    drawCircle = () => {\n        const {\n            context,\n            name,\n            positionX,\n            positionY,\n            size,\n            color\n        } = this\n        this.setFillCanvas()\n        context.arc(positionX, positionY, size, 0, Math.PI * 2)\n        context.fill()\n        if(optionStore.length < 3) {\n            optionStore.push({ name, x: positionX, y: positionY, size, color})\n        }\n    }\n\n    setText = () => {\n        const {\n            context,\n            name,\n            positionX,\n            positionY,\n        } = this\n        \n        context.beginPath()\n        context.font = \"bold 22px Franklin Gothic Medium\"\n        context.fillStyle = '#fff'\n        context.textAlign = \"center\";\n        context.fillText(name, positionX, positionY + 5)\n    }\n\n    startClickAnimation = (props) => (timestamp) => {\n        const {\n            windowHeight,\n            windowWidth,\n        } = props\n        const {\n            context,\n            positionX,\n            positionY,\n            size,\n            color,\n        } = this\n        console.log(this)\n        if(size > windowHeight && size > windowWidth){\n            return\n        }\n        let animSize = size\n        const animTime = 20\n        const circle = new Circle(context, \"\", positionX, positionY, animSize + animTime, color)\n        circle.drawCircle()\n\n        window.requestAnimationFrame(circle.startClickAnimation(props))\n    }\n\n    onClick = (e, props) => {\n        const {\n            clientX,\n            clientY\n        } = e\n        const {\n            name,\n            positionX,\n            positionY,\n            size\n        } = this\n        const rect = e.target.getBoundingClientRect()\n        const clickX = clientX - rect.left\n        const clickY = clientY - rect.top\n        const clickPoint = (clickX - positionX) ** 2 + (clickY - positionY) ** 2\n        const circleArea = size ** 2\n        if (clickPoint < circleArea) {\n            window.requestAnimationFrame(this.startClickAnimation(props))\n            switch (name) {\n                case 'Portfolio':\n                    props.history.push('/portfolio')\n                    break\n                case 'Profiel':\n                    props.history.push('/profiel')\n                    break\n                case 'Blog':\n                    props.history.push('/blog')\n                    break\n            }\n        }\n    }\n}","export default class Canvas {\n    constructor(canvasContext, name = '', x = 0, y = 0, size = 0, color = 'black') {\n        this.context = canvasContext\n        this.name = name\n        this.positionX = x\n        this.positionY = y\n        this.size = size\n        this.color = color\n    }\n\n    setFillCanvas = () => {\n        const {\n            context,\n            name,\n            positionX,\n            positionY,\n            color,\n        } = this\n        context.beginPath()\n        context.fillStyle = color\n    }\n}","import React, { Component, Fragment } from 'react'\nimport { css, StyleSheet } from 'aphrodite'\n\nexport default class GroupCircle extends Component {\n    render() {\n        const {\n            setRef,\n            onCircleClick,\n            canvas,\n            onResize,\n            setCircle,\n            windowHeight,\n            windowWidth\n        } = this.props\n        if (canvas !== null) {\n            canvas.addEventListener('click', onCircleClick(this.props))\n        }\n\n        return (\n            <div className={css(styles.wrapper)} >\n                <canvas\n                    ref={e => setRef(e, \"canvas\")}\n                    className={css(styles.canvas)}\n                    width={windowWidth}\n                    height={windowHeight}\n                >\n                </canvas>\n            </div>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#fff',\n        textAlign: 'center'\n    },\n    canvas: {\n        display: 'inline-block',\n        // alignItems: 'center',\n        // justifyContent: 'center'\n    }\n})","import { compose, withStateHandlers, setDisplayName, lifecycle, onlyUpdateForKeys, withHandlers } from 'recompose'\nimport { connect } from 'react-redux'\n\nimport Circle from '../../classes/circle'\nimport { optionStore } from '../../classes/circle'\nimport GroupCircle from '../../components/canvas/GroupCircle'\n\nimport * as WindowAction from '../../modules/window'\n\n\nconst display = \"GroupCircle\"\nconst component = GroupCircle\n\nconst initialProps = {\n    canvas: null,\n    windowHeight: window.innerHeight,\n    windowWidth: window.innerWidth < 800 ? window.innerWidth : 800,\n}\n\nconst canRenderProps = [\n    'canvas',\n    'windowHeight',\n    'windowWidth'\n]\n\n// propsの値を変更する\nconst handleChange = (ownProps) => (name, value) => {\n    return {\n        [name]: value\n    }\n}\n\nconst onResize = (ownProps) => (h, w) => {\n    console.log(h, w)\n\n    return {\n        windowHeight: h,\n        windowWidth: w < 800 ? w : 800,\n    }\n}\n// propsの変更を行うhandler\nconst stateHandler = {\n    handleChange,\n    onResize\n}\n\nconst setCircle = (ownProps) => (canvas) => {\n    const {\n        windowHeight,\n        windowWidth\n    } = ownProps\n    const height = windowHeight\n    const width = windowWidth\n\n    const ctx = canvas.getContext('2d')\n    const circleOptions = [\n        {\n            name: 'Portfolio',\n            x: width * 0.75,\n            y: height * 0.25,\n            size: width * 0.2,\n            color: '#cc33ff'\n        },\n        {\n            name: 'Profiel',\n            x: width * 0.34,\n            y: height * 0.52,\n            size: width * 0.3,\n            color: '#33cc00'\n        },\n        {\n            name: 'Blog',\n            x: width * 0.75,\n            y: height * 0.75,\n            size: width * 0.13,\n            color: '#ff3366'\n        }\n    ]\n\n    const ua = navigator.userAgent.toLowerCase()\n    for (let i = 0; i < circleOptions.length; i++) {\n        \n        const circleOption = circleOptions[i]\n        const {\n            name,\n            x,\n            y,\n            size,\n            color\n        } = circleOption\n\n        let responsiveX = x\n        let responsiveY = y\n        let responsiveSize = size\n        if(ua.match(/android|iphone/) === null){\n            console.log('hello', ua)\n            responsiveSize = size * 0.7\n        }\n        if(ua.match(/ipad/) !== null) {\n            responsiveX = x * 1\n            responsiveY = y * 0.8\n        }\n\n        const circle = new Circle(ctx, name, responsiveX, responsiveY, responsiveSize, color)\n        circle.drawCircle()\n        circle.setText()\n    }\n}\n\n\nconst onCircleClick = (ownProps) => (props) => (e) => {\n    const ctx = ownProps.canvas.getContext('2d')\n    for (let i = 0; i < optionStore.length; i++) {\n        const {\n            name,\n            x,\n            y,\n            size,\n            color\n        } = optionStore[i]\n        const circle = new Circle(ctx, name, x, y, size, color)\n        circle.onClick(e, props)\n    }\n}\n\nconst setRef = () => {\n    let refs = {}\n    return {\n        setRef: ownProps => (event, name) => (refs[name] = event),\n        getRefs: ownProps => () => refs\n    }\n}\n// propsの変更を行わないhandler\nconst handleProps = {\n    ...setRef(),\n    setCircle,\n    onCircleClick\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n})\n\n// componentDidMountなどのライフサイクルを記述する\nconst lifeCycle = {\n    componentDidMount() {\n        const {\n            setCircle,\n            getRefs\n        } = this.props\n\n        const refs = getRefs()\n        const {\n            canvas\n        } = refs\n        setCircle(canvas)\n        this.props.handleChange('canvas', canvas)\n    },\n    componentDidUpdate() {\n        const {\n            onResize,\n            canvas,\n            setCircle\n        } = this.props\n        if (canvas !== null) {\n            let queue = null\n            window.addEventListener('resize', () => {\n                clearTimeout(queue)\n                queue = setTimeout(() => {\n                    onResize(window.innerHeight, window.innerWidth)\n                    setCircle(canvas)\n                }, 100)\n            })\n        }\n    }\n}\n\nconst Enhance = compose(\n    setDisplayName(display),\n    withStateHandlers(\n        initialProps,\n        stateHandler\n    ),\n    withHandlers(handleProps),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    ),\n    lifecycle(lifeCycle),\n    onlyUpdateForKeys(canRenderProps),\n)\n\nexport default Enhance(component)","import React, { Component, Fragment } from 'react'\nimport { css, StyleSheet } from 'aphrodite'\n\nimport GroupCirle from '../../containers/canvas/GroupCircle'\n\nexport default class HomeTopScreen extends Component {\n    render() {\n        return (\n            <Fragment>\n                <div className={css(styles.container)}>\n                    <div className={css(styles.textContainer)}>\n                        <p className={css(styles.simpleText)}>\n                            My name is keiya sasaki.<br />\n                            My <span style={{color: '#cc33ff'}}>Portfolio</span>, <span style={{color: '#33cc00'}}>Profiel</span>, <span style={{color: '#ff3366'}}>Blog</span> are listed below.<br />\n                            Thank you.\n                    </p>\n                    </div>\n                </div>\n                <GroupCirle history={this.props.history}>\n                    <div className={css(styles.container)} >\n                    </div>\n                </GroupCirle>\n            </Fragment>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        width: '100vw',\n        height: '100vh'\n    },\n    textContainer: {\n        display: 'flex',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    simpleText: {\n        textAlign: 'left',\n    }\n})","import { compose, withStateHandlers, setDisplayName, lifecycle, onlyUpdateForKeys, withHandlers } from 'recompose'\nimport { connect } from 'react-redux'\n\nimport HomeTopScreen from '../../components/home/HomeTopScreen'\n\nconst display = \"HomeTopScreen\"\nconst component = HomeTopScreen\n\nconst initialProps = {\n}\n\nconst canRenderProps = [\n    \n]\n\n// propsの値を変更する\nconst handleChange = (ownProps) => {\n    return (name, value) => {\n        return {\n            [name]: value\n        }\n    }\n}\n\n// propsの変更を行うhandler\nconst stateHandler = {\n    handleChange,\n}\n\n// propsの変更を行わないhandler\nconst handleProps = (ownProps) => ({\n})\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n\n})\n\n// componentDidMountなどのライフサイクルを記述する\nconst lifeCycle = {\n\n}\n\nconst Enhance = compose(\n    setDisplayName(display),\n    withStateHandlers(\n        initialProps,\n        stateHandler\n    ),\n    withHandlers(handleProps),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    ),\n    lifecycle(lifeCycle),\n    onlyUpdateForKeys(canRenderProps),\n)\n\nexport default Enhance(component)","import { compose, withStateHandlers, setDisplayName, lifecycle, onlyUpdateForKeys, withHandlers } from 'recompose'\nimport { connect } from 'react-redux'\n\nimport * as WindowActions from '../modules/window'\n\nimport AppRoute from '../components/AppRoute'\n\nconst display = \"AppRoute\"\nconst component = AppRoute\n\nconst initialProps = {\n}\n\nconst canRenderProps = []\n\n// propsの値を変更する\nconst handleChange = (ownProps) => {\n    return (name, value) => {\n        return {\n            [name]: value\n        }\n    }\n}\n\n// propsの変更を行うhandler\nconst stateHandler = {\n    handleChange,\n}\n\n// propsの変更を行わないhandler\nconst handleProps = (ownProps) => ({\n})\n\nconst mapStateToProps = (state) => {\n    const { \n        windowHeight,\n        windowWidth\n     } = state.window\n     return {\n         windowHeight,\n         windowWidth\n     }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n})\n\n// componentDidMountなどのライフサイクルを記述する\nconst lifeCycle = {\n\n}\n\nconst Enhance = compose(\n    setDisplayName(display),\n    withStateHandlers(\n        initialProps,\n        stateHandler\n    ),\n    withHandlers(handleProps),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    ),\n    lifecycle(lifeCycle),\n    onlyUpdateForKeys(canRenderProps),\n)\n\nexport default Enhance(component)","import React, { Component, Fragment } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport HomeTopScreen from '../containers/home/HomeTopScreen'\n\nexport default class AppRoute extends Component {\n    render() {\n        return (\n            <Router>\n                <Fragment>\n                    <Route exact path='/' component={HomeTopScreen} />\n                    <Route path='/portfolio' component={HomeTopScreen} />\n                    <Route path='/profiel' component={HomeTopScreen} />\n                    <Route path='/blog' component={HomeTopScreen} />\n                </Fragment>\n            </Router>\n        )\n    }\n}","import React, { Component, Fragment } from 'react'\nimport { css, StyleSheet } from 'aphrodite'\nimport store from '../modules/store'\nimport { Provider } from 'react-redux'\n\nimport AppRoute from '../containers/AppRoute'\n\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <AppRoute />\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}