{"version":3,"sources":["assets/img/thumbnail.jpg","modules/window/index.js","modules/store.js","classes/circle.js","classes/canvas.js","components/canvas/GroupCircle.js","containers/canvas/GroupCircle.js","components/home/HomeTopScreen.js","containers/home/HomeTopScreen.js","containers/AppRoute.js","components/AppRoute.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","RESIZE_WINDOW","prefix","initialState","windowHeight","window","innerHeight","windowWidth","innerWidth","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","createStore","reduxCreateStore","combineReducers","applyMiddleware","thunk","logger","optionStore","Circle","drawCircle","_assertThisInitialize","assertThisInitialized","_this","context","name","positionX","positionY","size","color","setFillCanvas","arc","Math","PI","fill","push","x","y","setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","setText","_assertThisInitialize3","beginPath","font","fillStyle","textAlign","fillText","startClickAnimation","props","navigate","timestamp","_assertThisInitialize4","history","circle","requestAnimationFrame","onClick","e","clientX","clientY","_assertThisInitialize5","rect","target","getBoundingClientRect","clickX","left","clickY","top","pow","Canvas","canvasContext","this","classCallCheck","GroupCircle","_this$props","setRef","onCircleClick","canvas","onResize","setCircle","children","addEventListener","react_default","a","createElement","className","css","styles","wrapper","ref","width","height","Component","StyleSheet","create","position","backgroundColor","component","initialProps","stateHandler","handleChange","ownProps","value","defineProperty","h","w","console","log","handleProps","refs","event","getRefs","ctx","getContext","clearRect","circleOptions","ua","navigator","userAgent","toLowerCase","i","circleOption","responsiveX","responsiveY","responsiveSize","match","_optionStore$i","lifeCycle","componentDidMount","componentDidUpdate","_this$props2","queue","clearTimeout","setTimeout","Enhance","compose","setDisplayName","withStateHandlers","withHandlers","connect","dispatch","lifecycle","onlyUpdateForKeys","HomeTopScreen","react","container","textContainer","style","paddingBottom","src","require","image","simpleText","canvas_GroupCircle","display","flexDirection","justifyContent","borderRadius","objectFit","marginRight","border","fontSize","fontWeight","maxWidth","margin","alignItems","BrowserRouter","Route","exact","path","_state$window","App","react_redux_es","store","containers_AppRoute","Boolean","location","hostname","ReactDOM","render","App_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.530d6c19.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thumbnail.79b1ce1a.jpg\";","import { dispatch } from \"rxjs/internal/observable/range\";\n\nconst prefix = 'portfolio/window/'\n\nconst RESIZE_WINDOW = prefix + 'RESIZE_WINDOW'\n\nconst initialState = {\n    windowHeight: window.innerHeight,\n    windowWidth: window.innerWidth < 600 ? window.innerWidth : 600,\n}\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case RESIZE_WINDOW:\n            const {\n                windowHeight,\n                windowWidth,\n            } = action\n            return {\n                ...state,\n                windowHeight,\n                windowWidth\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport const resizeWindow = (h, w) => ({\n    type: RESIZE_WINDOW,\n    windowHeight: h,\n    windowWidth: w\n})","import { createStore as reduxCreateStore, applyMiddleware, combineReducers } from 'redux'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nimport window from './window'\n\nfunction createStore() {\n  const store = reduxCreateStore(\n    combineReducers({\n      window\n    }),\n    applyMiddleware(\n      thunk,\n      logger,\n    )\n  );\n  \n  return store;\n}\n\nexport default createStore()","import Canvas from './canvas'\n\n// クリックされた時の処理用にx座標とy座標とsizeを保存しておく\nexport let optionStore = []\n\nexport default class Circle extends Canvas {\n    drawCircle = () => {\n        const {\n            context,\n            name,\n            positionX,\n            positionY,\n            size,\n            color\n        } = this\n        this.setFillCanvas()\n        context.arc(positionX, positionY, size, 0, Math.PI * 2)\n        context.fill()\n        if (optionStore.length < 3) {\n            optionStore.push({ name, x: positionX, y: positionY, size, color })\n        }\n    }\n\n    setShadow = () => {\n        const {\n            context,\n        } = this\n        context.shadowColor = '#eee'\n        context.shadowBlur = 0.5\n        context.shadowOffsetX = -0.5\n        context.shadowOffsetY = 0.5\n    }\n\n    setText = () => {\n        const {\n            context,\n            name,\n            positionX,\n            positionY,\n        } = this\n\n        context.beginPath()\n        context.font = \"bold 22px Franklin Gothic Medium\"\n        context.fillStyle = '#333'\n        context.textAlign = \"center\";\n        context.fillText(name, positionX, positionY + 5)\n    }\n\n    startClickAnimation = (props, navigate) => (timestamp) => {\n        const {\n            windowHeight,\n            windowWidth,\n        } = props\n        const {\n            context,\n            name,\n            positionX,\n            positionY,\n            size,\n            color,\n        } = this\n        if (size > windowHeight && size > windowWidth) {\n            switch (name) {\n                case 'Works':\n                    props.history.push('/works')\n                    return\n                case 'Blogs':\n                    props.history.push('/blogs')\n                    return\n            }\n            return\n        }\n        let animSize = size\n        const animTime = 20\n        const circle = new Circle(context, name, positionX, positionY, animSize + animTime, color)\n        circle.drawCircle()\n        window.requestAnimationFrame(circle.startClickAnimation(props))\n    }\n\n    onClick = (e, props) => {\n        const {\n            clientX,\n            clientY\n        } = e\n        const {\n            name,\n            positionX,\n            positionY,\n            size\n        } = this\n        const rect = e.target.getBoundingClientRect()\n        const clickX = clientX - rect.left\n        const clickY = clientY - rect.top\n        const clickPoint = (clickX - positionX) ** 2 + (clickY - positionY) ** 2\n        const circleArea = size ** 2\n        if (clickPoint < circleArea) {\n            window.requestAnimationFrame(this.startClickAnimation(props))\n        }\n    }\n}","export default class Canvas {\n    constructor(canvasContext, name = '', x = 0, y = 0, size = 0, color = 'black') {\n        this.context = canvasContext\n        this.name = name\n        this.positionX = x\n        this.positionY = y\n        this.size = size\n        this.color = color\n    }\n\n    setFillCanvas = () => {\n        const {\n            context,\n            name,\n            positionX,\n            positionY,\n            color,\n        } = this\n        context.beginPath()\n        context.fillStyle = color\n    }\n}","import React, { Component, Fragment } from 'react'\nimport { css, StyleSheet } from 'aphrodite'\n\nexport default class GroupCircle extends Component {\n    render() {\n        const {\n            setRef,\n            onCircleClick,\n            canvas,\n            onResize,\n            setCircle,\n            windowHeight,\n            windowWidth,\n            children\n        } = this.props\n        if (canvas !== null) {\n            canvas.addEventListener('click', onCircleClick(this.props))\n        }\n\n        return (\n            <div className={css(styles.wrapper)} >\n                <canvas\n                    ref={e => setRef(e, \"canvas\")}\n                    className={css(styles.canvas)}\n                    width={windowWidth}\n                    height={windowHeight}\n                />\n            </div>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        position: 'relative',\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#eee',\n    },\n    canvas: {\n        backgroundColor: '#F5F5DC'\n    }\n})","import { compose, withStateHandlers, setDisplayName, lifecycle, onlyUpdateForKeys, withHandlers } from 'recompose'\nimport { connect } from 'react-redux'\n\nimport Circle from '../../classes/circle'\nimport { optionStore } from '../../classes/circle'\nimport GroupCircle from '../../components/canvas/GroupCircle'\n\nimport * as WindowAction from '../../modules/window'\n\n\nconst display = \"GroupCircle\"\nconst component = GroupCircle\n\nconst initialProps = {\n    canvas: null,\n    windowHeight: window.innerHeight,\n    windowWidth: window.innerWidth,\n}\n\nconst canRenderProps = [\n    'canvas',\n    'windowHeight',\n    'windowWidth',\n]\n\n// propsの値を変更する\nconst handleChange = (ownProps) => (name, value) => {\n    return {\n        [name]: value\n    }\n}\n\nconst onResize = (ownProps) => (h, w) => {\n    console.log(h, w)\n\n    return {\n        windowHeight: h,\n        windowWidth: w,\n    }\n}\n// propsの変更を行うhandler\nconst stateHandler = {\n    handleChange,\n    onResize\n}\n\nconst setCircle = (ownProps) => (canvas) => {\n    const {\n        windowHeight,\n        windowWidth\n    } = ownProps\n    const height = windowHeight\n    const width = windowWidth\n\n    const ctx = canvas.getContext('2d')\n    ctx.clearRect(0, 0, width, height);\n    const circleOptions = [\n        {\n            name: 'Blogs',\n            x: width * 0.35,\n            y: height * 0.6,\n            size: width * 0.25,\n            color: '#fff'\n        },\n        {\n            name: 'Works',\n            x: width * 0.65,\n            y: height * 0.45,\n            size: width * 0.25,\n            color: '#fff'\n        },\n    ]\n\n    const ua = navigator.userAgent.toLowerCase()\n    for (let i = 0; i < circleOptions.length; i++) {\n\n        const circleOption = circleOptions[i]\n        const {\n            name,\n            x,\n            y,\n            size,\n            color\n        } = circleOption\n\n        let responsiveX = x\n        let responsiveY = y\n        let responsiveSize = size\n        if (ua.match(/android|iphone/) === null) {\n            responsiveX *= name === 'Blogs' ? 1.2 : 0.92\n            responsiveY *= name === 'Blogs' ? 0.95 : 0.9\n            responsiveSize *= width > 1000 ? 0.5 : 0.7\n        }\n        if (ua.match(/ipad/) !== null) {\n            responsiveX *= name === 'Blogs' ? 0.8 : 1.1\n            responsiveY *= name === 'Blogs' ? 1 : 1.1\n            responsiveSize = width * 0.25\n        }\n\n        const circle = new Circle(ctx, name, responsiveX, responsiveY, responsiveSize, color)\n        circle.drawCircle()\n        circle.setShadow()\n        circle.setText()\n    }\n}\n\n\nconst onCircleClick = (ownProps) => (props) => (e) => {\n    const ctx = ownProps.canvas.getContext('2d')\n    for (let i = 0; i < optionStore.length; i++) {\n        const {\n            name,\n            x,\n            y,\n            size,\n            color\n        } = optionStore[i]\n        const circle = new Circle(ctx, name, x, y, size, color)\n        circle.onClick(e, props)\n    }\n}\n\nconst setRef = () => {\n    let refs = {}\n    return {\n        setRef: ownProps => (event, name) => (refs[name] = event),\n        getRefs: ownProps => () => refs\n    }\n}\n// propsの変更を行わないhandler\nconst handleProps = {\n    ...setRef(),\n    setCircle,\n    onCircleClick\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n})\n\n// componentDidMountなどのライフサイクルを記述する\nconst lifeCycle = {\n    componentDidMount() {\n        const {\n            setCircle,\n            getRefs\n        } = this.props\n\n        const refs = getRefs()\n        const {\n            canvas\n        } = refs\n        setCircle(canvas)\n        this.props.handleChange('canvas', canvas)\n    },\n    componentDidUpdate() {\n        const {\n            onResize,\n            canvas,\n            setCircle\n        } = this.props\n        if (canvas !== null) {\n            let queue = null\n            window.addEventListener('resize', () => {\n                clearTimeout(queue)\n                queue = setTimeout(() => {\n                    onResize(window.innerHeight, window.innerWidth)\n                    setCircle(canvas)\n                }, 100)\n            })\n        }\n    }\n}\n\nconst Enhance = compose(\n    setDisplayName(display),\n    withStateHandlers(\n        initialProps,\n        stateHandler\n    ),\n    withHandlers(handleProps),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    ),\n    lifecycle(lifeCycle),\n    onlyUpdateForKeys(canRenderProps),\n)\n\nexport default Enhance(component)","import React, { Component, Fragment } from 'react'\nimport { css, StyleSheet } from 'aphrodite'\n\nimport GroupCirle from '../../containers/canvas/GroupCircle'\n\nexport default class HomeTopScreen extends Component {\n    render() {\n        return (\n            <Fragment>\n                <div className={css(styles.container)}>\n                    <div className={css(styles.textContainer)} style={{paddingBottom: 50}}>\n                        <img src={require('../../assets/img/thumbnail.jpg')} className={css(styles.image)} />\n                        <p className={css(styles.name)}>Keiya Sasaki</p>\n                    </div>\n                    <div className={css(styles.textContainer)}>\n                        <p className={css(styles.simpleText)}>\n                            about me\n                        </p>\n                    </div>\n                </div>\n                <GroupCirle history={this.props.history} />\n            </Fragment>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        width: '100vw',\n        height: '100vh'\n    },\n    image: {\n        width: 70,\n        height: 70,\n        borderRadius: '50%',\n        objectFit: 'cover',\n        marginRight: 20,\n        border: 'solid 1px #BDB76B',\n    },\n    name: {\n        fontSize: 20,\n        color: '#333',\n        fontWeight: 600,\n    },\n    textContainer: {\n        display: 'flex',\n        maxWidth: 360,\n        width: '90%',\n        margin: '0 auto',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    simpleText: {\n        textAlign: 'left',\n        color: '#555',\n        fontSize: 15,\n    },\n})","import { compose, withStateHandlers, setDisplayName, lifecycle, onlyUpdateForKeys, withHandlers } from 'recompose'\nimport { connect } from 'react-redux'\n\nimport HomeTopScreen from '../../components/home/HomeTopScreen'\n\nconst display = \"HomeTopScreen\"\nconst component = HomeTopScreen\n\nconst initialProps = {\n}\n\nconst canRenderProps = [\n    \n]\n\n// propsの値を変更する\nconst handleChange = (ownProps) => {\n    return (name, value) => {\n        return {\n            [name]: value\n        }\n    }\n}\n\n// propsの変更を行うhandler\nconst stateHandler = {\n    handleChange,\n}\n\n// propsの変更を行わないhandler\nconst handleProps = (ownProps) => ({\n})\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n\n})\n\n// componentDidMountなどのライフサイクルを記述する\nconst lifeCycle = {\n\n}\n\nconst Enhance = compose(\n    setDisplayName(display),\n    withStateHandlers(\n        initialProps,\n        stateHandler\n    ),\n    withHandlers(handleProps),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    ),\n    lifecycle(lifeCycle),\n    onlyUpdateForKeys(canRenderProps),\n)\n\nexport default Enhance(component)","import { compose, withStateHandlers, setDisplayName, lifecycle, onlyUpdateForKeys, withHandlers } from 'recompose'\nimport { connect } from 'react-redux'\n\nimport * as WindowActions from '../modules/window'\n\nimport AppRoute from '../components/AppRoute'\n\nconst display = \"AppRoute\"\nconst component = AppRoute\n\nconst initialProps = {\n}\n\nconst canRenderProps = []\n\n// propsの値を変更する\nconst handleChange = (ownProps) => {\n    return (name, value) => {\n        return {\n            [name]: value\n        }\n    }\n}\n\n// propsの変更を行うhandler\nconst stateHandler = {\n    handleChange,\n}\n\n// propsの変更を行わないhandler\nconst handleProps = (ownProps) => ({\n})\n\nconst mapStateToProps = (state) => {\n    const { \n        windowHeight,\n        windowWidth\n     } = state.window\n     return {\n         windowHeight,\n         windowWidth\n     }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n})\n\n// componentDidMountなどのライフサイクルを記述する\nconst lifeCycle = {\n\n}\n\nconst Enhance = compose(\n    setDisplayName(display),\n    withStateHandlers(\n        initialProps,\n        stateHandler\n    ),\n    withHandlers(handleProps),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    ),\n    lifecycle(lifeCycle),\n    onlyUpdateForKeys(canRenderProps),\n)\n\nexport default Enhance(component)","import React, { Component, Fragment } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport HomeTopScreen from '../containers/home/HomeTopScreen'\n\nexport default class AppRoute extends Component {\n    render() {\n        return (\n            <Router>\n                <Fragment>\n                    <Route exact path='/portfolio' component={HomeTopScreen} />\n                    <Route path='/portfolio/works' component={HomeTopScreen} />\n                    <Route path='/portfolio/blogs' component={HomeTopScreen} />\n                </Fragment>\n            </Router>\n        )\n    }\n}","import React, { Component, Fragment } from 'react'\nimport { css, StyleSheet } from 'aphrodite'\nimport store from '../modules/store'\nimport { Provider } from 'react-redux'\n\nimport AppRoute from '../containers/AppRoute'\n\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <AppRoute />\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}