{"version":3,"sources":["modules/window/index.js","modules/store.js","classes/circle.js","classes/canvas.js","components/canvas/GroupCircle.js","containers/canvas/GroupCircle.js","components/home/HomeTopScreen.js","containers/home/HomeTopScreen.js","containers/AppRoute.js","components/AppRoute.js","components/App.js","serviceWorker.js","index.js"],"names":["RESIZE_WINDOW","prefix","initialState","windowHeight","windowWidth","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","createStore","reduxCreateStore","combineReducers","window","applyMiddleware","thunk","logger","optionStore","Circle","drawCircle","_assertThisInitialize","assertThisInitialized","_this","context","name","positionX","positionY","size","setFillCanvas","arc","Math","PI","fill","push","x","y","beginPath","font","fillStyle","textAlign","fillText","startAnimation","onClick","e","props","clientX","clientY","_assertThisInitialize2","rect","target","getBoundingClientRect","clickX","left","clickY","top","pow","history","Canvas","canvasContext","this","color","classCallCheck","GroupCircle","_this$props","setRef","onCircleClick","canvas","children","addEventListener","react_default","a","createElement","className","css","styles","wrapper","ref","width","innerWidth","height","innerHeight","Component","StyleSheet","create","backgroundColor","component","stateHandler","handleChange","ownProps","value","defineProperty","handleProps","refs","event","getRefs","setCircle","clientHeight","clientWidth","ctx","getContext","circleOptions","i","circleOption","_optionStore$i","Enhance","compose","setDisplayName","withStateHandlers","withHandlers","connect","dispatch","lifecycle","componentDidMount","onlyUpdateForKeys","HomeTopScreen","react","container","textContainer","simpleText","style","canvas_GroupCircle","display","alignItems","justifyContent","BrowserRouter","Route","exact","path","_state$window","App","react_redux_es","store","containers_AppRoute","Boolean","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8e049435.chunk.js","sourcesContent":["import { dispatch } from \"rxjs/internal/observable/range\";\n\nconst prefix = 'portfolio/window/'\n\nconst RESIZE_WINDOW = prefix + 'RESIZE_WINDOW'\n\nconst initialState = {\n    windowHeight: 0,\n    windowWidth: 0,\n}\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case RESIZE_WINDOW:\n            const {\n                windowHeight,\n                windowWidth,\n            } = action\n            return {\n                ...state,\n                windowHeight,\n                windowWidth\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport const resizeWindow = (h, w) => ({\n    type: RESIZE_WINDOW,\n    windowHeight: h,\n    windowWidth: w\n})","import { createStore as reduxCreateStore, applyMiddleware, combineReducers } from 'redux'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nimport window from './window'\n\nfunction createStore() {\n  const store = reduxCreateStore(\n    combineReducers({\n      window\n    }),\n    applyMiddleware(\n      thunk,\n      logger,\n    )\n  );\n  \n  return store;\n}\n\nexport default createStore()","import Canvas from './canvas'\n\n// クリックされた時の処理用にx座標とy座標とsizeを保存しておく\nexport let optionStore = []\n\nexport default class Circle extends Canvas {\n    drawCircle = () => {\n        const {\n            context,\n            name,\n            positionX,\n            positionY,\n            size,\n        } = this\n        this.setFillCanvas()\n        context.arc(positionX, positionY, size, 0, Math.PI * 2)\n        context.fill()\n        if(optionStore.length < 3) {\n            optionStore.push({ name, x: positionX, y: positionY, size })\n        }\n        // textの設定\n        context.beginPath()\n        context.font = \"bold 22px Franklin Gothic Medium\"\n        context.fillStyle = '#fff'\n        context.textAlign = \"center\";\n        context.fillText(name, positionX, positionY + 5)\n    }\n\n    startAnimation = () => {\n        \n    }\n\n    onClick = (e, props) => {\n        const {\n            clientX,\n            clientY\n        } = e\n        const {\n            name,\n            positionX,\n            positionY,\n            size\n        } = this\n        const rect = e.target.getBoundingClientRect()\n        const clickX = clientX - rect.left\n        const clickY = clientY - rect.top\n        const clickPoint = (clickX - positionX) ** 2 + (clickY - positionY) ** 2\n        const circleArea = size ** 2\n        if (clickPoint < circleArea) {\n            switch (name) {\n                case 'Portfolio':\n                    props.history.push('/portfolio')\n                    break\n                case 'Profiel':\n                    props.history.push('/profiel')\n                    break\n                case 'Blog':\n                    props.history.push('/blog')\n                    break\n            }\n        }\n    }\n}","export default class Canvas {\n    constructor(canvasContext, name = '', x = 0, y = 0, size = 0, color = 'black') {\n        this.context = canvasContext\n        this.name = name\n        this.positionX = x\n        this.positionY = y\n        this.size = size\n        this.color = color\n    }\n\n    setFillCanvas = () => {\n        const {\n            context,\n            name,\n            positionX,\n            positionY,\n            color,\n        } = this\n        context.beginPath()\n        context.fillStyle = color\n    }\n}","import React, { Component, Fragment } from 'react'\nimport { css, StyleSheet } from 'aphrodite'\n\nexport default class GroupCircle extends Component {\n    render() {\n        const {\n            setRef,\n            onCircleClick,\n            canvas,\n            children,\n        } = this.props\n        if(canvas !== null) {\n            canvas.addEventListener('click', onCircleClick(this.props))\n        }\n        return (\n            <div className={css(styles.wrapper)} >\n                <canvas\n                    ref={e => setRef(e, \"canvas\")}\n                    className={css(styles.canvas)}\n                    width={window.innerWidth}\n                    height={window.innerHeight}\n                >\n                    {children}\n                </canvas>\n            </div>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#fff'\n    },\n})","import { compose, withStateHandlers, setDisplayName, lifecycle, onlyUpdateForKeys, withHandlers } from 'recompose'\nimport { connect } from 'react-redux'\n\nimport Circle from '../../classes/circle'\nimport { optionStore } from '../../classes/circle'\nimport GroupCircle from '../../components/canvas/GroupCircle'\n\n\nconst display = \"GroupCircle\"\nconst component = GroupCircle\n\nconst initialProps = {\n    canvas: null\n}\n\nconst canRenderProps = [\n    'canvas'\n]\n\n// propsの値を変更する\nconst handleChange = (ownProps) => {\n    return (name, value) => {\n        return {\n            [name]: value\n        }\n    }\n}\n// propsの変更を行うhandler\nconst stateHandler = {\n    handleChange,\n}\n\nconst setCircle = (ownProps) => {\n    return (canvas) => {\n        const height = canvas.clientHeight\n        const width = canvas.clientWidth\n\n        \n        const ctx = canvas.getContext('2d')\n        const circleOptions = [\n            {\n                name: 'Portfolio',\n                x: width * 0.7, \n                y: height * 0.25, \n                size: 80, \n                color: '#cc33ff'\n            },\n            {\n                name: 'Profiel',\n                x: width * 0.3, \n                y: height * 0.55, \n                size: 100, \n                color: '#33cc00'\n            },\n            {\n                name: 'Blog',\n                x: width * 0.7, \n                y: height * 0.75, \n                size: 50, \n                color: '#ff3366'\n            }\n        ]\n\n        for(let i = 0; i < circleOptions.length; i++) {\n            const circleOption = circleOptions[i]\n            const {\n                name, \n                x, \n                y,\n                size,\n                color\n            } = circleOption\n            const circle = new Circle(ctx, name, x, y, size, color)\n            circle.drawCircle()\n        }\n    }\n}\n\nconst onCircleClick = (ownProps) => (props) => (e) => {\n    for(let i = 0; i < optionStore.length; i++) {\n        const {\n            name,\n            x,\n            y,\n            size\n        } = optionStore[i]\n        const circle = new Circle(null, name, x, y, size)\n        circle.onClick(e, props)\n    }\n}\n\nconst setRef = () => {\n    let refs = {}\n    return {\n        setRef: ownProps => (event, name) => (refs[name] = event),\n        getRefs: ownProps => () => refs\n    }\n}\n// propsの変更を行わないhandler\nconst handleProps = {\n    ...setRef(),\n    setCircle,\n    onCircleClick\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n})\n\n// componentDidMountなどのライフサイクルを記述する\nconst lifeCycle = {\n    componentDidMount() {\n        const {\n            setCircle,\n            getRefs\n        } = this.props\n\n        const refs = getRefs()\n        const {\n            canvas\n        } = refs\n        setCircle(canvas)\n        this.props.handleChange('canvas', canvas)\n    }\n}\n\nconst Enhance = compose(\n    setDisplayName(display),\n    withStateHandlers(\n        initialProps,\n        stateHandler\n    ),\n    withHandlers(handleProps),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    ),\n    lifecycle(lifeCycle),\n    onlyUpdateForKeys(canRenderProps),\n)\n\nexport default Enhance(component)","import React, { Component, Fragment } from 'react'\nimport { css, StyleSheet } from 'aphrodite'\n\nimport GroupCirle from '../../containers/canvas/GroupCircle'\n\nexport default class HomeTopScreen extends Component {\n    render() {\n        return (\n            <Fragment>\n                <div className={css(styles.container)}>\n                    <div className={css(styles.textContainer)}>\n                        <p className={css(styles.simpleText)}>\n                            My name is keiya sasaki.<br />\n                            My <span style={{color: '#cc33ff'}}>Portfolio</span>, <span style={{color: '#33cc00'}}>Profiel</span>, <span style={{color: '#ff3366'}}>Blog</span> are listed below.<br />\n                            Thank you.\n                    </p>\n                    </div>\n                </div>\n                <GroupCirle history={this.props.history}>\n                    <div className={css(styles.container)} >\n                    </div>\n                </GroupCirle>\n            </Fragment>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        width: '100vw',\n        height: '100vh'\n    },\n    textContainer: {\n        display: 'flex',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    simpleText: {\n        textAlign: 'left',\n    }\n})","import { compose, withStateHandlers, setDisplayName, lifecycle, onlyUpdateForKeys, withHandlers } from 'recompose'\nimport { connect } from 'react-redux'\n\nimport HomeTopScreen from '../../components/home/HomeTopScreen'\n\nconst display = \"HomeTopScreen\"\nconst component = HomeTopScreen\n\nconst initialProps = {\n}\n\nconst canRenderProps = [\n    \n]\n\n// propsの値を変更する\nconst handleChange = (ownProps) => {\n    return (name, value) => {\n        return {\n            [name]: value\n        }\n    }\n}\n\n// propsの変更を行うhandler\nconst stateHandler = {\n    handleChange,\n}\n\n// propsの変更を行わないhandler\nconst handleProps = (ownProps) => ({\n})\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n\n})\n\n// componentDidMountなどのライフサイクルを記述する\nconst lifeCycle = {\n\n}\n\nconst Enhance = compose(\n    setDisplayName(display),\n    withStateHandlers(\n        initialProps,\n        stateHandler\n    ),\n    withHandlers(handleProps),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    ),\n    lifecycle(lifeCycle),\n    onlyUpdateForKeys(canRenderProps),\n)\n\nexport default Enhance(component)","import { compose, withStateHandlers, setDisplayName, lifecycle, onlyUpdateForKeys, withHandlers } from 'recompose'\nimport { connect } from 'react-redux'\n\nimport * as WindowActions from '../modules/window'\n\nimport AppRoute from '../components/AppRoute'\n\nconst display = \"AppRoute\"\nconst component = AppRoute\n\nconst initialProps = {\n}\n\nconst canRenderProps = []\n\n// propsの値を変更する\nconst handleChange = (ownProps) => {\n    return (name, value) => {\n        return {\n            [name]: value\n        }\n    }\n}\n\n// propsの変更を行うhandler\nconst stateHandler = {\n    handleChange,\n}\n\n// propsの変更を行わないhandler\nconst handleProps = (ownProps) => ({\n})\n\nconst mapStateToProps = (state) => {\n    const { \n        windowHeight,\n        windowWidth\n     } = state.window\n     return {\n         windowHeight,\n         windowWidth\n     }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n})\n\n// componentDidMountなどのライフサイクルを記述する\nconst lifeCycle = {\n\n}\n\nconst Enhance = compose(\n    setDisplayName(display),\n    withStateHandlers(\n        initialProps,\n        stateHandler\n    ),\n    withHandlers(handleProps),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    ),\n    lifecycle(lifeCycle),\n    onlyUpdateForKeys(canRenderProps),\n)\n\nexport default Enhance(component)","import React, { Component, Fragment } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport HomeTopScreen from '../containers/home/HomeTopScreen'\n\nexport default class AppRoute extends Component {\n    render() {\n        return (\n            <Router>\n                <Fragment>\n                    <Route exact path='/' component={HomeTopScreen} />\n                    <Route path='/portfolio' component={HomeTopScreen} />\n                    <Route path='/profiel' component={HomeTopScreen} />\n                    <Route path='/blog' component={HomeTopScreen} />\n                </Fragment>\n            </Router>\n        )\n    }\n}","import React, { Component, Fragment } from 'react'\nimport { css, StyleSheet } from 'aphrodite'\nimport store from '../modules/store'\nimport { Provider } from 'react-redux'\n\nimport AppRoute from '../containers/AppRoute'\n\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <AppRoute />\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}