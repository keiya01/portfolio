{"version":3,"sources":["assets/img/thumbnail.jpg","modules/works/index.js","constants/api.js","modules/store.js","classes/circle.js","classes/canvas.js","components/canvas/GroupCircle.js","modules/window/index.js","containers/canvas/GroupCircle.js","components/home/HomeTopScreen.js","containers/home/HomeTopScreen.js","components/common/screen/PreparationScreen.js","components/works/lists/items/WorkItem.js","components/common/buttons/NextScreenButton.js","components/common/List.js","components/common/Loading.js","components/works/WorkTopScreen.js","containers/works/WorkTopScreen.js","components/blogs/BlogTopScreen.js","containers/blogs/BlogTopScreen.js","containers/AppRoute.js","components/AppRoute.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","prefix","GET_WORKS_START","GET_WORKS_SUCCESS","GET_WORKS_FAILED","GET_WORKS_END","initialState","data","isFetching","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","error","getWorks","dispatch","getState","axios","get","then","json","getWorksSuccess","catch","err","finally","createStore","reduxCreateStore","combineReducers","works","applyMiddleware","thunk","logger","optionStore","tempStore","Circle","context","name","positionX","positionY","size","color","_this","text","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","drawCircle","_optionStore","isSaveStore","_assertThisInitialize","assertThisInitialized","setFillCanvas","arc","Math","PI","fill","push","x","y","apply","toConsumableArray","setShadow","moveDistanceY","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","resetShadow","setTitle","_assertThisInitialize4","beginPath","font","fillStyle","textAlign","fillText","setText","_assertThisInitialize5","clickAnimation","nextAnimation","constantSize","props","timestamp","_assertThisInitialize6","windowHeight","window","innerHeight","windowWidth","innerWidth","animSize","animY","requestAnimationFrame","activeCircle","clearRect","i","_optionStore$i","optionName","optionX","optionY","optionSize","isActiveCircle","circle","transitionAnimation","_assertThisInitialize7","history","animTime","navigator","userAgent","toLowerCase","match","onClick","e","clientX","clientY","_assertThisInitialize8","rect","target","getBoundingClientRect","clickX","left","clickY","top","pow","canvasStore","Canvas","canvasContext","floor","GroupCircle","_this$props","setRef","onCircleClick","canvas","addEventListener","react_default","a","createElement","className","css","styles","wrapper","titleWrapper","movePosition","infoTitle","fontResize","ref","style","width","height","Component","StyleSheet","create","position","display","right","@media (max-width: 450px)","fontSize","fontWeight","@media (max-width: 600px)","backgroundColor","initialProps","isCircleClicked","stateHandler","handleChange","ownProps","value","defineProperty","onResize","h","w","setCircle","ctx","getContext","circleOptions","ua","circleOption","responsiveX","responsiveY","responsiveSize","lifeCycle","componentDidMount","getRefs","componentDidUpdate","_this$props2","queue","clearTimeout","setTimeout","screen","Enhance","compose","setDisplayName","withStateHandlers","withHandlers","refs","event","isClicked","setClickEvent","connect","lifecycle","onlyUpdateForKeys","DisplayComponent","HomeTopScreen","react","container","profileContainer","paddingBottom","src","require","image","descriptionContainer","opacity","descriptionText","canvas_GroupCircle","flexDirection","justifyContent","margin","alignItems","borderRadius","objectFit","marginRight","border","animationName","from","transform","to","animationTimingFunction","animationDuration","animationDelay","maxWidth","paddingLeft","handleProps","refHandler","divDescription","PreparationScreen","message","Link","link","marginTop","textDecoration","IconListItem","icon","line","iconColor","iconName","contentListItem","index_es","WorkItem","str","regex","split","map","key","WorkItem_IconListItem","title","technology","body","favorite","improvement","created_at","onShowItem","item","animation","filter","noImage","noImageText","contentContainer","overflowY","contentTitle","createdAt","clear","technologyContainer","contentList","nl2br","subTitle","codeBtn","codeLink","href","filterText","boxShadow","marginBottom","borderTopLeftRadius","borderTopRightRadius","borderBottom","padding","float","textIndent","wordWrap","listStyle","bottom","borderBottomLeftRadius","borderBottomRightRadius","NextScreenButton","uri","btnContainer","btnText","List","list","Loading","loading","spinner","pulse","WorkTopScreen","index","WorkItem_WorkItem","assign","NextScreenButton_NextScreenButton","paddingTop","prevAnimation","prevFilter","_state$works","BlogTopScreen","PreparationScreen_PreparationScreen","component","BrowserRouter","basename","Switch","Route","path","exact","redirectHashUri","location","includes","slice","Works","componentWillMount","App","react_redux_es","store","containers_AppRoute","Boolean","hostname","library","add","faCheck","faGrinSquint","faFrown","faCircle","faSpinner","ReactDOM","render","App_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9078cc11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thumbnail.79b1ce1a.jpg\";","import axios from 'axios'\nimport * as API from '../../constants/api'\n\nconst prefix = 'portfolio/works/'\n\nconst GET_WORKS_START = prefix + 'GET_WORKS_START'\nconst GET_WORKS_SUCCESS = prefix + 'GET_WORKS_SUCCESS'\nconst GET_WORKS_FAILED = prefix + 'GET_WORKS_FAILED'\nconst GET_WORKS_END = prefix + 'GET_WORKS_END'\n\nconst initialState = {\n    data: [],\n    isFetching: false\n}\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case GET_WORKS_START:\n            return {\n                ...state,\n                isFetching: true\n            }\n        case GET_WORKS_SUCCESS:\n            const {\n                data\n            } = action\n            return {\n                ...state,\n                data,\n                isFetching: true\n            }\n        case GET_WORKS_FAILED:\n            return {\n                ...state,\n                error: action.error\n            }\n        case GET_WORKS_END:\n            return {\n                ...state,\n                isFetching: false\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nconst getWorksStart = () => ({\n    type: GET_WORKS_START\n})\nconst getWorksSuccess = (json) => ({\n    type: GET_WORKS_SUCCESS,\n    data: json\n})\nconst getWorksFaild = (error) => ({\n    type: GET_WORKS_FAILED,\n    error\n})\nconst getWorksEnd = () => ({\n    type: GET_WORKS_END\n})\n\nexport const getWorks = () => (dispatch, getState) => {\n    const uri = API.WORKS\n    dispatch(getWorksStart())\n    axios.get(uri)\n        .then((json) => {\n            dispatch(getWorksSuccess(json.data))\n        })\n        .catch((err) => {\n            dispatch(getWorksFaild(err))\n        }).finally(() => {\n            dispatch(getWorksEnd())\n        })\n}","export const WORKS = \"https://script.google.com/macros/s/AKfycbx1zqRJTh_4qbfopWyGS-4rqibT5OUKc5V_pwz_m_9Xbqus3FZy/exec\"","import { createStore as reduxCreateStore, applyMiddleware, combineReducers } from 'redux'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nimport works from './works'\n\nfunction createStore() {\n  const store = reduxCreateStore(\n    combineReducers({\n      works\n    }),\n    applyMiddleware(\n      thunk,\n      logger,\n    )\n  );\n  \n  return store;\n}\n\nexport default createStore()","import Canvas from './canvas'\n\n// クリックされた時の処理用にx座標とy座標とsizeを保存しておく\nexport let optionStore = []\nlet tempStore = []\n\nexport default class Circle extends Canvas {\n    constructor(context, name, positionX, positionY, size, color, text = \"\") {\n        super(context, name, positionX, positionY, size, color)\n        this.text = text\n        this.canvasStore = []\n    }\n    drawCircle = (isSaveStore = true) => {\n        const {\n            context,\n            name,\n            positionX,\n            positionY,\n            size,\n            color,\n            text,\n        } = this\n        this.setFillCanvas()\n        context.arc(positionX, positionY, size, 0, Math.PI * 2)\n        context.fill()\n        if(isSaveStore) {\n            if (tempStore.length === 2) {\n                tempStore = []\n            }\n            tempStore.push({ name, x: positionX, y: positionY, size, color, text })\n            if(tempStore.length === 2) {\n                optionStore = []\n                optionStore.push(...tempStore)\n            }\n        }\n    }\n\n    setShadow = (moveDistanceY = null) => {\n        const {\n            context,\n        } = this\n        context.shadowColor = '#555'\n        context.shadowOffsetX = -0.5\n        context.shadowOffsetY = moveDistanceY !== null ? moveDistanceY : 2\n        context.shadowBlur = moveDistanceY !== null ? 1 : 8\n    }\n\n    resetShadow = () => {\n        const {\n            context\n        } = this\n        context.shadowColor = '#fff'\n        context.shadowOffsetX = 0\n        context.shadowOffsetY = 0\n        context.shadowBlur = 0\n    }\n\n    setTitle = () => {\n        const {\n            context,\n            name,\n            positionX,\n            positionY,\n        } = this\n\n        context.beginPath()\n        context.font = \"bold 40px Arial\"\n        context.fillStyle = '#333'\n        context.textAlign = \"center\";\n        context.fillText(name, positionX, positionY)\n    }\n\n    setText = () => {\n        const {\n            context,\n            text,\n            positionX,\n            positionY,\n            size\n        } = this\n\n        context.beginPath()\n        context.font = `normal 25px 游ゴシック`\n        context.fillStyle = '#555'\n        context.textAlign = \"center\";\n        context.fillText(text, positionX, positionY + 50)\n    }\n\n    clickAnimation = (nextAnimation, constantSize, props) => (timestamp) => {\n        const {\n            context,\n            name,\n            size,\n            positionY\n        } = this\n        // const {\n        //     windowHeight,\n        //     windowWidth,\n        // } = props\n\n        const windowHeight = window.innerHeight\n        const windowWidth = window.innerWidth\n\n        const animTime = 3\n        const animSize = size\n        const animY = positionY\n        if (animSize <= constantSize - 25) {\n            window.requestAnimationFrame(nextAnimation)\n            return\n        }\n\n        // クリックされた円を保存しておく\n        let activeCircle = {}\n        // 描画をリセット\n        context.clearRect(0, 0, windowWidth * 2, windowHeight * 2)\n        \n        // 再描画と同時にクリックされた円を縮小させる\n        for (let i = 0; i < optionStore.length; i++) {\n            const {\n                name: optionName,\n                x: optionX,\n                y: optionY,\n                size: optionSize,\n                color: optionColor,\n                text: optionText\n            } = optionStore[i]\n\n            const isActiveCircle = optionName === name\n\n            const nextSize = isActiveCircle ? animSize - animTime : optionSize\n            const nextY = isActiveCircle ? animY + 2 : optionY\n            const circle = new Circle(context, optionName, optionX, nextY, nextSize, optionColor, optionText)\n            if (isActiveCircle) {\n                activeCircle = circle\n                circle.setShadow(0.1)\n            }else{\n                circle.setShadow()\n            }\n            circle.drawCircle()\n            circle.resetShadow()\n            circle.setTitle()\n            circle.setText()\n        }\n        window.requestAnimationFrame(activeCircle.clickAnimation(nextAnimation, constantSize, props))\n    }\n\n    transitionAnimation = (props) => (timestamp) => {\n        const {\n            windowHeight,\n            windowWidth,\n        } = props\n        const {\n            context,\n            name,\n            positionX,\n            positionY,\n            size,\n            color,\n        } = this\n        if (size > windowHeight * 2 && size > windowWidth * 2) {\n            switch (name) {\n                case 'Works':\n                    props.history.push('/works')\n                    return\n                case 'Blogs':\n                    props.history.push('/blogs')\n                    return\n            }\n            return\n        }\n\n        let animSize = size\n        const ua = navigator.userAgent.toLowerCase()\n        // PC用のアニメーションスピード\n        let animTime = 55\n        // スマホ用のアニメーションスピード\n        if(ua.match(/android|iphone/) !== null) {\n            animTime = 35\n        }\n        const circle = new Circle(context, name, positionX, positionY, animSize + animTime, color)\n        circle.drawCircle(false)\n\n        window.requestAnimationFrame(circle.transitionAnimation(props))\n    }\n\n    onClick = (e, props) => {\n        const {\n            clientX,\n            clientY\n        } = e\n        const {\n            name,\n            positionX,\n            positionY,\n            size\n        } = this\n        const rect = e.target.getBoundingClientRect()\n        const clickX = clientX * 2 - rect.left\n        const clickY = clientY * 2 - rect.top\n        const clickPoint = (clickX - positionX) ** 2 + (clickY - positionY) ** 2\n        const circleArea = size ** 2\n        if (clickPoint < circleArea) {\n            return true\n        }\n        return false\n    }\n}","export default class Canvas {\n    constructor(canvasContext, name = '', x = 0, y = 0, size = 0, color = 'black') {\n        this.context = canvasContext\n        this.name = name\n        // canvasは浮動小数点を使うと遅くなるため整数にする\n        this.positionX = Math.floor(x)\n        this.positionY = Math.floor(y)\n        this.size = Math.floor(size)\n        this.color = color\n    }\n\n    setFillCanvas = () => {\n        const {\n            context,\n            name,\n            positionX,\n            positionY,\n            color,\n        } = this\n        context.beginPath()\n        context.fillStyle = color\n    }\n}","import React, { Component, Fragment } from 'react'\nimport { css, StyleSheet } from 'aphrodite'\n\nexport default class GroupCircle extends Component {\n    render() {\n        const {\n            setRef,\n            onCircleClick,\n            canvas,\n            windowWidth,\n            windowHeight\n        } = this.props\n        if (canvas !== null) {\n            canvas.addEventListener('click', onCircleClick(this.props))\n        }\n\n        const title = 'Information'\n        return (\n            <div className={css(styles.wrapper)} >\n                <div className={css(styles.titleWrapper, styles.movePosition)}>\n                    <h3 className={css(styles.infoTitle, styles.fontResize)}>{title}</h3>\n                </div>\n                <canvas\n                    ref={e => setRef(e, \"canvas\")}\n                    className={css(styles.canvas)}\n                    // width={windowWidth}\n                    // height={windowHeight}\n                    style={{width: windowWidth, height: windowHeight}}\n                />\n            </div>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        position: 'relative',\n        width: '100%',\n        height: '100%',\n    },\n    titleWrapper: {\n        display: 'inline-block',\n        position: 'absolute',\n        top: '10%',\n        left: 0,\n        right: 0,\n        textAlign: 'center',\n    },\n    movePosition: {\n        '@media (max-width: 450px)':{\n            top: '20%'\n        }\n    },\n    infoTitle: {\n        fontSize: 50,\n        fontWeight: 'bold',\n        color: '#fff'\n    },\n    fontResize: {\n        '@media (max-width: 600px)': {\n            fontSize: 30,\n        }\n    },\n    canvas: {\n        backgroundColor: '#FA776D'\n    },\n})","import { dispatch } from \"rxjs/internal/observable/range\";\n\nconst prefix = 'portfolio/window/'\n\nconst RESIZE_WINDOW = prefix + 'RESIZE_WINDOW'\n\nconst initialState = {\n    windowHeight: window.innerHeight,\n    windowWidth: window.innerWidth < 600 ? window.innerWidth : 600,\n}\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case RESIZE_WINDOW:\n            const {\n                windowHeight,\n                windowWidth,\n            } = action\n            return {\n                ...state,\n                windowHeight,\n                windowWidth\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport const resizeWindow = (h, w) => ({\n    type: RESIZE_WINDOW,\n    windowHeight: h,\n    windowWidth: w\n})","import { compose, withStateHandlers, setDisplayName, lifecycle, onlyUpdateForKeys, withHandlers } from 'recompose'\nimport { connect } from 'react-redux'\n\nimport Circle from '../../classes/circle'\nimport { optionStore } from '../../classes/circle'\nimport DisplayComponent from '../../components/canvas/GroupCircle'\n\nimport * as WindowAction from '../../modules/window'\n\n\nconst display = \"GroupCircle\"\n\nconst initialProps = {\n    canvas: null,\n    windowHeight: window.innerHeight,\n    windowWidth: window.innerWidth,\n    isCircleClicked: false\n}\n\nconst canRenderProps = [\n    'canvas',\n    'windowHeight',\n    'windowWidth',\n]\n\n// propsの値を変更する\nconst handleChange = (ownProps) => (name, value) => {\n    return {\n        [name]: value\n    }\n}\n\nconst onResize = (ownProps) => (h, w) => {\n    return {\n        windowHeight: h,\n        windowWidth: w,\n    }\n}\n// propsの変更を行うhandler\nconst stateHandler = {\n    handleChange,\n    onResize\n}\n\nconst setCircle = (ownProps) => (canvas) => {\n    const {\n        windowHeight,\n        windowWidth\n    } = ownProps\n\n    const height = windowHeight * 2\n    const width = windowWidth * 2\n    canvas.height = height\n    canvas.width = width\n\n    const ctx = canvas.getContext('2d')\n    ctx.clearRect(0, 0, width, height)\n    // スマートフォン用の設定\n    const circleOptions = [\n        {\n            name: 'Blogs',\n            x: width * 0.34,\n            y: height * 0.6,\n            size: width * 0.25,\n            color: '#fff',\n            text: '学習記録'\n        },\n        {\n            name: 'Works',\n            x: width * 0.66,\n            y: height * 0.51,\n            size: width * 0.25,\n            color: '#fff',\n            text: '作品一覧'\n        },\n    ]\n\n    const ua = navigator.userAgent.toLowerCase()\n    for (let i = 0; i < circleOptions.length; i++) {\n\n        const circleOption = circleOptions[i]\n        const {\n            name,\n            x,\n            y,\n            size,\n            color,\n            text\n        } = circleOption\n\n        let responsiveX = x\n        let responsiveY = y\n        let responsiveSize = size\n        if (ua.match(/android|iphone/) === null) {\n            responsiveX *= name === 'Blogs' ? 1.25 : 0.89\n            responsiveY *= name === 'Blogs' ? 1.1 : 1.08\n            responsiveSize *= width > 1000 ? 0.5 : 0.65\n        }\n        if (ua.match(/ipad/) !== null) {\n            responsiveX *= name === 'Blogs' ? 0.8 : 1.1\n            responsiveY *= name === 'Blogs' ? 1 : 1.1\n            responsiveSize = width * 0.25\n        }\n\n        const circle = new Circle(ctx, name, responsiveX, responsiveY, responsiveSize, color, text)\n        circle.setShadow()\n        circle.drawCircle()\n        circle.resetShadow()\n        circle.setTitle()\n        circle.setText()\n    }\n}\n\n\nconst setClickEvent = (ownProps) => {\n    // クリックされているかどうかを確認する変数\n    let isClicked = false\n    return {\n        onCircleClick: (ownProps) => (props) => (e) => {\n            const {\n                canvas,\n                handleChange,\n                isCircleClicked\n            } = ownProps\n\n            // circleがクリックされているなら処理をしない\n            if (isClicked) {\n                return\n            }\n\n            // クリックを禁止する\n            isClicked = true\n\n            const ctx = canvas.getContext('2d')\n            let activeCircle = null\n            for (let i = 0; i < optionStore.length; i++) {\n                const {\n                    name,\n                    x,\n                    y,\n                    size,\n                    color,\n                    text\n                } = optionStore[i]\n                const circle = new Circle(ctx, name, x, y, size, color, text)\n                const isAnimation = circle.onClick(e, props)\n                if (isAnimation) {\n                    // 配列の中で最後の要素かつ円の範囲をクリックされているものを代入\n                    activeCircle = circle\n                }\n            }\n            // 手前の円のみにアニメーションを付ける\n            if (activeCircle !== null) {\n                window.requestAnimationFrame(\n                    activeCircle.clickAnimation(\n                        activeCircle.transitionAnimation(props),\n                        activeCircle.size,\n                        props\n                    )\n                )\n            }\n        }\n    }\n}\n\nconst setRef = () => {\n    let refs = {}\n    return {\n        setRef: ownProps => (event, name) => (refs[name] = event),\n        getRefs: ownProps => () => refs\n    }\n}\n// propsの変更を行わないhandler\nconst handleProps = (ownProps) => ({\n    ...setRef(),\n    ...setClickEvent(ownProps),\n    setCircle,\n})\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n})\n\n// componentDidMountなどのライフサイクルを記述する\nconst lifeCycle = {\n    componentDidMount() {\n        const {\n            setCircle,\n            getRefs\n        } = this.props\n\n        const refs = getRefs()\n        const {\n            canvas\n        } = refs\n        setCircle(canvas)\n        this.props.handleChange('canvas', canvas)\n    },\n    componentDidUpdate() {\n        const {\n            onResize,\n            canvas,\n            setCircle\n        } = this.props\n        if (canvas !== null) {\n            let queue = null\n            window.addEventListener('resize', () => {\n                clearTimeout(queue)\n                queue = setTimeout(() => {\n                    const ua = navigator.userAgent.toLowerCase()\n                    if(ua.match(/android|iphone/) !== null) {\n                        // スマホ用のサイズ調整\n                        onResize(window.screen.height, window.screen.width)\n                    }else{\n                        onResize(window.innerHeight, window.innerWidth)\n                    }\n                    setCircle(canvas)\n                }, 100)\n            })\n        }\n    }\n}\n\nconst Enhance = compose(\n    setDisplayName(display),\n    withStateHandlers(\n        initialProps,\n        stateHandler\n    ),\n    withHandlers(handleProps),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    ),\n    lifecycle(lifeCycle),\n    onlyUpdateForKeys(canRenderProps),\n)\n\nexport default Enhance(DisplayComponent)","import React, { Component, Fragment } from 'react'\nimport { css, StyleSheet } from 'aphrodite'\n\nimport GroupCirle from '../../containers/canvas/GroupCircle'\n\nexport default class HomeTopScreen extends Component {\n    render() {\n        return (\n            <Fragment>\n                <div className={css(styles.container)}>\n                    <div className={css(styles.profileContainer)} style={{ paddingBottom: 50 }}>\n                        <img src={require('../../assets/img/thumbnail.jpg')} className={css(styles.image)} />\n                        <p className={css(styles.name)}>Keiya Sasaki</p>\n                    </div>\n                    <div\n                        className={css(styles.descriptionContainer)}\n                        style={{ opacity: 0 }}\n                        ref={this.props.setRef('divDescription')}\n                    >\n                        <table className={css(styles.descriptionText)}>\n                            <tbody>\n                                <tr>\n                                    <td>生年月日</td><td>1999/02/10</td>\n                                </tr>\n                                <tr>\n                                    <td style={{ width: '40%' }}>プログラミング歴</td><td>2017/06/01 〜 現在</td>\n                                </tr>\n                                <tr>\n                                    <td>言語</td><td>Ruby(Ruby on Rails), PHP(FuelPHP), Go, React, ReactNative</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <br />\n                        <p className={css(styles.descriptionText)}>ちなみにこのサイトはReactで書いています。</p><br />\n                        <span style={{color: '#FC9D9A', fontWeight: 'bold' }}>Career</span><br />\n                        <table className={css(styles.descriptionText)}>\n                            <tbody>\n                                <tr>\n                                    <td>2017/06/01</td><td>プログラミング学習開始</td>\n                                </tr>\n                                <tr>\n                                    <td>2018/03/01</td><td>株式会社AppRunsでエンジニアとしてアルバイト</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <GroupCirle history={this.props.history} />\n            </Fragment>\n        )\n    }\n}\n\nconst showImage = [\n    {\n        'from': {\n            transform: 'translate(55%, 0)'\n        },\n        'to': {\n            transform: 'translate(0, 0)'\n        }\n    }\n]\n\nconst showUserName = [\n    {\n        'from': {\n            opacity: 0,\n        },\n        'to': {\n            opacity: 1,\n        },\n    }\n]\n\nconst showDescription = [\n    {\n        'from': {\n            opacity: 0,\n            transform: 'translate(0, 100px)'\n        },\n        'to': {\n            opacity: 1,\n            transform: 'translate(0, 0)'\n        },\n    }\n]\n\nconst styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        width: '100vw',\n        height: '100vh'\n    },\n    profileContainer: {\n        display: 'flex',\n        margin: '0 auto',\n        width: '90%',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    image: {\n        width: 70,\n        height: 70,\n        borderRadius: '50%',\n        objectFit: 'cover',\n        marginRight: 20,\n        border: 'solid 1px #F9CDAD',\n        animationName: showImage,\n        animationTimingFunction: 'easy',\n        animationDuration: '2s',\n        animationDelay: '0s'\n    },\n    name: {\n        fontSize: 20,\n        color: '#757575',\n        fontWeight: 600,\n        animationName: showUserName,\n        animationTimingFunction: 'easy',\n        animationDuration: '4s',\n        animationDelay: '0s'\n    },\n    descriptionContainer: {\n        width: '90%',\n        maxWidth: 480,\n        margin: '0 auto',\n        paddingLeft: 20,\n        animationName: showDescription,\n        animationDuration: '3s',\n        animationTimingFunction: 'ease',\n        animationDelay: '2s',\n    },\n    descriptionText: {\n        color: '#555',\n        fontSize: 15,\n    },\n})","import { compose, withStateHandlers, setDisplayName, lifecycle, onlyUpdateForKeys, withHandlers } from 'recompose'\nimport { connect } from 'react-redux'\n\nimport DisplayComponent from '../../components/home/HomeTopScreen'\n\nconst display = \"HomeTopScreen\"\n\nconst initialProps = {\n}\n\nconst canRenderProps = [\n    \n]\n\n// propsの値を変更する\nconst handleChange = (ownProps) => {\n    return (name, value) => {\n        return {\n            [name]: value\n        }\n    }\n}\n\n// propsの変更を行うhandler\nconst stateHandler = {\n    handleChange,\n}\n\nconst refHandler = () => {\n    let refs = {}\n    return {\n        setRef: (ownProps) => name => e => (refs[name] = e),\n        getRefs: (ownProps) => () => refs\n    }\n}\n\n// propsの変更を行わないhandler\nconst handleProps = {\n    ...refHandler()\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n\n})\n\n// componentDidMountなどのライフサイクルを記述する\nconst lifeCycle = {\n    componentDidMount() {\n        const {\n            getRefs\n        } = this.props\n        const refs = getRefs()\n        const {\n            divDescription\n        } = refs\n        setTimeout(() => {\n            divDescription.style.opacity = 1\n        }, 3500)\n    }\n\n}\n\nconst Enhance = compose(\n    setDisplayName(display),\n    withStateHandlers(\n        initialProps,\n        stateHandler\n    ),\n    withHandlers(handleProps),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    ),\n    lifecycle(lifeCycle),\n    onlyUpdateForKeys(canRenderProps),\n)\n\nexport default Enhance(DisplayComponent)","import React, { Component, Fragment } from 'react'\nimport { StyleSheet, css } from 'aphrodite'\nimport { Link } from 'react-router-dom'\n\nexport default class PreparationScreen extends Component {\n    render() {\n        return (\n            <div className={css(styles.container)}>\n                <h3 className={css(styles.message)}>準備中です...</h3>\n                <Link to='/' className={css(styles.link)}>トップへ</Link>\n            </div>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        width: '100vw',\n        height: '100vh',\n        backgroundColor: '#fff'\n    },\n    message: {\n        textAlign: 'center',\n        color: '#FA776D',\n        fontSize: 25\n    },\n    link: {\n        marginTop: 30,\n        textAlign: 'center',\n        color: '#4EA1D5',\n        fontSize: 16,\n        textDecoration: 'none'\n    }\n})","import React, { Component } from 'react'\nimport { StyleSheet, css } from 'aphrodite'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst IconListItem = (props) => {\n    const {\n        icon,\n        line,\n        iconColor\n    } = props\n    const iconName = icon ? icon : 'circle'\n    const size = !icon && 10\n    return (\n        <li className={css(styles.contentListItem)}>\n            <FontAwesomeIcon\n                icon={iconName}\n                style={{ color: iconColor, fontSize: size }}\n            />\n            {line}\n        </li>\n    )\n}\n\nexport default class WorkItem extends Component {\n    nl2br(str, icon, iconColor) {\n        const regex = /(\\\\n)/g\n        return str.split(regex).map((line, i) => {\n            return line.match(regex)\n                ?\n                <br key={i} />\n                :\n                <IconListItem\n                    line={line}\n                    icon={icon}\n                    iconColor={iconColor}\n                    key={i}\n                />\n        })\n    }\n    render() {\n        const {\n            title,\n            technology,\n            body,\n            favorite,\n            improvement,\n            color,\n            image,\n            link,\n            created_at,\n            onShowItem\n        } = this.props\n        return (\n            <div \n            className={css(styles.item)}\n            onClick={() => onShowItem(this.animation, this.filter)}\n            >\n                {\n                    image\n                        ?\n                        <img src={image} className={css(styles.image)} />\n                        :\n                        <div className={css(styles.noImage)} >\n                            <h3 className={css(styles.noImageText)}>No Image</h3>\n                        </div>\n                }\n                <div\n                    className={css(styles.contentContainer)}\n                    style={{ height: 200, overflowY: 'hidden' }}\n                    ref={(e) => this.animation = e}\n                >\n                    <h3 className={css(styles.contentTitle)} style={{ color }}>{title}</h3>\n                    <p className={css(styles.createdAt)}>作成日: {created_at}</p>\n                    <div style={{ clear: 'left' }} />\n                    <p className={css(styles.technologyContainer)}><span style={{ color }}>技術</span>: {technology}</p>\n                    <ul className={css(styles.contentList)}>\n                        {this.nl2br(body, 'check', color)}\n                    </ul>\n                    <p className={css(styles.subTitle)} style={{ color: '#FA776D' }}>\n                        <FontAwesomeIcon\n                            icon='grin-squint'\n                            style={{ marginRight: 5 }}\n                        />\n                        お気に入りポイント\n                    </p>\n                    <ul className={css(styles.contentList)}>\n                        {this.nl2br(favorite)}\n                    </ul>\n                    <p className={css(styles.subTitle)} style={{ color: '#F9CDAD' }}>\n                        <FontAwesomeIcon\n                            icon='frown'\n                            style={{ marginRight: 5 }}\n                        />\n                        反省点\n                    </p>\n                    <ul className={css(styles.contentList)}>\n                        {this.nl2br(improvement)}\n                    </ul>\n                    <div className={css(styles.codeBtn)}>\n                        <a className={css(styles.codeLink)} href={link}>Githubを見る</a>\n                    </div>\n                </div>\n                <div className={css(styles.filter)} ref={(e) => this.filter = e}>\n                    <h3 className={css(styles.filterText)}>もっと見る</h3>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    item: {\n        position: 'relative',\n        width: '100%',\n        height: '100%',\n        borderRadius: 20,\n        boxShadow: '2px 2px 10px #eee, -2px -2px 10px #eee',\n        marginBottom: 20\n    },\n    image: {\n        width: '100%',\n        height: 200,\n        borderTopLeftRadius: 20,\n        borderTopRightRadius: 20,\n        objectFit: 'contain',\n        paddingBottom: 3,\n        borderBottom: 'solid 1.5px #ccc'\n    },\n    noImage: {\n        display: 'flex',\n        width: '100%',\n        height: 200,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderTopLeftRadius: 20,\n        borderTopRightRadius: 20,\n        borderBottom: 'solid 1.5px #ccc'\n    },\n    noImageText: {\n        fontSize: 25,\n        color: '#F9CDAD',\n    },\n    contentContainer: {\n        padding: '20px',\n    },\n    contentTitle: {\n        float: 'left',\n        fontSize: 30,\n        marginBottom: 10,\n    },\n    createdAt: {\n        float: 'right',\n        fontSize: 13,\n        color: '#777',\n    },\n    technologyContainer: {\n        fontSize: 14,\n        color: '#757575',\n        textIndent: '-2.5em',\n        wordWrap: 'break-word',\n        paddingLeft: 35,\n        marginTop: 25,\n        marginBottom: 25\n    },\n    contentList: {\n        listStyle: 'none',\n        padding: 0,\n        paddingLeft: 20,\n        marginTop: 10,\n        wordWrap: 'break-word',\n    },\n    contentListItem: {\n        fontSize: 16,\n        color: '#555',\n        textIndent: '-1em'\n    },\n    subTitle: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        marginTop: 35,\n    },\n    codeBtn: {\n        textAlign: 'center',\n        marginTop: 50,\n    },\n    codeLink: {\n        fontSize: 16,\n        color: '#757575',\n        textDecoration: 'underline solid #757575',\n    },\n    filter: {\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        left: 0,\n        backgroundColor: 'rgba(255, 255, 255, 0.9)',\n        height: 65,\n        borderBottomLeftRadius: 20,\n        borderBottomRightRadius: 20,\n    },\n    filterText: {\n        color: '#FA776D',\n        fontSize: 17,\n        textAlign: 'center',\n        marginTop: 20\n    }\n})","import React, { Component } from 'react'\nimport { StyleSheet, css } from 'aphrodite'\nimport { Link } from 'react-router-dom'\n\nexport default class NextScreenButton extends Component {\n    render() {\n        const {\n            uri,\n            text,\n        } = this.props\n        return (\n            <Link to={uri} style={{textDecoration: 'none'}}>\n                <div className={css(styles.btnContainer)}>\n                    <p className={css(styles.btnText)}>{text}</p>\n                </div>\n            </Link>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    btnContainer: {\n        textDecoration: 'none',\n        width: '90%',\n        height: '100%',\n        maxWidth: 375,\n        margin: '0 auto',\n        backgroundColor: '#FC9D9A',\n        padding: '15px 0',\n        textAlign: 'center',\n        borderRadius: 10\n    },\n    btnText: {\n        fontSize: 16,\n        color: '#fff',\n    }\n})","import React, { Fragment } from 'react'\n\nexport default function List (props) {\n    const {\n        data,\n        item\n    } = props\n    let list = []\n    for (let i = 0; i < data.length; i++) {\n        list.push(item(data[i], i))\n    }\n    return (\n        <Fragment>\n            {list}\n        </Fragment>\n    )\n}","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { StyleSheet, css } from 'aphrodite'\n\nexport default function Loading (props) {\n    return (\n        <div className={css(styles.loading)}>\n            <FontAwesomeIcon\n                icon='spinner'\n                className={css(styles.spinner)}\n                pulse\n            />\n        </div>\n    )\n}\n\nconst styles = StyleSheet.create({\n    loading: {\n        width: '100vw',\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    spinner: {\n        fontSize: 40,\n        color: '#FA776D',\n        display: 'flex',\n        textAlign: 'center'\n    }\n})","import React, { Component, Fragment } from 'react'\nimport { StyleSheet, css } from 'aphrodite'\nimport PreparationScreen from '../common/screen/PreparationScreen'\nimport WorkItem from './lists/items/WorkItem'\nimport NextScreenButton from '../common/buttons/NextScreenButton'\nimport List from '../common/List'\nimport Loading from '../common/Loading'\n\nexport default class WorkTopScreen extends Component {\n    render() {\n        const {\n            list,\n            onShowItem,\n            isFetching\n        } = this.props\n        return (\n            <Fragment>\n                {\n                    isFetching\n                        ?\n                        <Loading />\n                        :\n                        <div className={css(styles.container)}>\n                            <h1 className={css(styles.title)}>Works</h1>\n                            <div className={css(styles.list)}>\n                                <List\n                                    data={list}\n                                    item={(item, index) => {\n                                        return (\n                                            <WorkItem\n                                                onShowItem={onShowItem}\n                                                key={index}\n                                                {...item}\n                                            />\n                                        )\n                                    }}\n                                />\n                            </div>\n                            <NextScreenButton\n                                uri='/blogs'\n                                text='ブログを見る'\n                            />\n                            {/* <PreparationScreen /> */}\n                        </div>\n                }\n            </Fragment>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#fff',\n        paddingTop: 80,\n        paddingBottom: 30\n    },\n    title: {\n        textAlign: 'center',\n        color: '#FA776D',\n        fontSize: 30,\n        marginBottom: 50,\n    },\n    list: {\n        width: '90%',\n        height: '100%',\n        padding: '20px 0',\n        maxWidth: 480,\n        margin: '0 auto',\n    },\n})","import { compose, withStateHandlers, setDisplayName, lifecycle, onlyUpdateForKeys, withHandlers } from 'recompose'\nimport { connect } from 'react-redux'\n\nimport DisplayComponent from '../../components/works/WorkTopScreen'\n\nconst display = 'WorkTopScreen'\n\nconst initialProps = {\n    list: [],\n    isFetching: false,\n    prevAnimation: null,\n    prevFilter: null\n}\n\nconst canRenderProps = [\n    'list',\n    'isFetching'\n]\n\n// propsの値を変更する\nconst handleChange = (ownProps) => {\n    return (name, value) => {\n        return {\n            [name]: value\n        }\n    }\n}\n\nconst onShowItem = (ownProps) => (animation, filter) => {\n    const {\n        prevAnimation,\n        prevFilter\n    } = ownProps\n    if (prevAnimation && prevFilter) {\n        prevAnimation.style.height = 200\n        prevAnimation.style.overflowY = 'hidden'\n        prevFilter.style.display = 'block'\n    }\n    animation.style.height = '100%'\n    animation.style.overflowY = 'none'\n    filter.style.display = 'none'\n\n    return {\n        prevAnimation: animation,\n        prevFilter: filter\n    }\n}\n\n// propsの変更を行うhandler\nconst stateHandler = {\n    handleChange,\n    onShowItem\n}\n\nconst refHandler = () => {\n    let refs = {}\n    return {\n        setRef: (ownProps) => name => e => (refs[name] = e),\n        getRefs: (ownProps) => () => refs\n    }\n}\n\n// propsの変更を行わないhandler\nconst handleProps = {\n    ...refHandler()\n}\n\nconst mapStateToProps = (state) => {\n    const {\n        data,\n        isFetching\n    } = state.works\n    return {\n        list: data,\n        isFetching\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n})\n\n// componentDidMountなどのライフサイクルを記述する\nconst lifeCycle = {\n\n\n}\n\nconst Enhance = compose(\n    setDisplayName(display),\n    withStateHandlers(\n        initialProps,\n        stateHandler\n    ),\n    withHandlers(handleProps),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    ),\n    lifecycle(lifeCycle),\n    onlyUpdateForKeys(canRenderProps),\n)\n\nexport default Enhance(DisplayComponent)","import React, { Component, Fragment } from 'react'\nimport { StyleSheet, css } from 'aphrodite'\nimport PreparationScreen from '../common/screen/PreparationScreen';\n\nexport default class BlogTopScreen extends Component {\n    render() {\n        return (\n            <div>\n                <PreparationScreen />\n            </div>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    \n})","import { compose, withStateHandlers, setDisplayName, lifecycle, onlyUpdateForKeys, withHandlers } from 'recompose'\nimport { connect } from 'react-redux'\n\nimport DisplayComponent from '../../components/blogs/BlogTopScreen'\n\nconst display = 'BlogTopScreen'\n\nconst initialProps = {\n}\n\nconst canRenderProps = [\n    \n]\n\n// propsの値を変更する\nconst handleChange = (ownProps) => {\n    return (name, value) => {\n        return {\n            [name]: value\n        }\n    }\n}\n\n// propsの変更を行うhandler\nconst stateHandler = {\n    handleChange,\n}\n\nconst refHandler = () => {\n    let refs = {}\n    return {\n        setRef: (ownProps) => name => e => (refs[name] = e),\n        getRefs: (ownProps) => () => refs\n    }\n}\n\n// propsの変更を行わないhandler\nconst handleProps = {\n    ...refHandler()\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n\n})\n\n// componentDidMountなどのライフサイクルを記述する\nconst lifeCycle = {\n    \n\n}\n\nconst Enhance = compose(\n    setDisplayName(display),\n    withStateHandlers(\n        initialProps,\n        stateHandler\n    ),\n    withHandlers(handleProps),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    ),\n    lifecycle(lifeCycle),\n    onlyUpdateForKeys(canRenderProps),\n)\n\nexport default Enhance(DisplayComponent)","import { compose, withStateHandlers, setDisplayName, lifecycle, onlyUpdateForKeys, withHandlers } from 'recompose'\nimport { connect } from 'react-redux'\nimport * as Works from '../modules/works'\n\nimport AppRoute from '../components/AppRoute'\n\n\nconst display = \"AppRoute\"\nconst component = AppRoute\n\nconst initialProps = {\n    list: []\n}\n\nconst canRenderProps = []\n\n// propsの値を変更する\nconst handleChange = (ownProps) => {\n    return (name, value) => {\n        return {\n            [name]: value\n        }\n    }\n}\n\n// propsの変更を行うhandler\nconst stateHandler = {\n    handleChange,\n}\n\nconst redirectHashUri = (ownProps) => () => {\n    const { location } = window\n    let uri = location.href\n\n    const hasHash = uri.includes('/#/')\n    if (!hasHash) {\n        // http://example.com/ 最後に「 / 」が入っているなら取り除く\n        if (uri.slice(-1) !== '/') {\n            // 最後の文字以外を取得\n            uri += '/'\n        }\n        // 指定のuriに遷移\n        window.location = uri + '#/'\n    }\n}\n\n// propsの変更を行わないhandler\nconst handleProps = (ownProps) => ({\n    redirectHashUri\n})\n\nconst mapStateToProps = (state) => {\n    const {\n        data\n    } = state.works\n    return {\n        list: data\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    getWorks: () => dispatch(Works.getWorks())\n})\n\n// componentDidMountなどのライフサイクルを記述する\nconst lifeCycle = {\n    componentWillMount() {\n        const {\n            list,\n            getWorks,\n            redirectHashUri\n        } = this.props\n        if(list.length === 0) {\n            getWorks()\n        }\n        redirectHashUri()\n    }\n\n}\n\nconst Enhance = compose(\n    setDisplayName(display),\n    withStateHandlers(\n        initialProps,\n        stateHandler\n    ),\n    withHandlers(handleProps),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    ),\n    lifecycle(lifeCycle),\n    onlyUpdateForKeys(canRenderProps),\n)\n\nexport default Enhance(component)","import React, { Component, Fragment } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport HomeTopScreen from '../containers/home/HomeTopScreen'\nimport WorkTopScreen from '../containers/works/WorkTopScreen'\nimport BlogTopScreen from '../containers/blogs/BlogTopScreen'\n\nexport default class AppRoute extends Component {\n    render() {\n        return (\n            <Router basename='/portfolio/#'>\n                <Fragment>\n                    <Switch>\n                        <Route path={`/works`} component={WorkTopScreen} />\n                        <Route path={`/blogs`} component={BlogTopScreen} />\n                        <Route exact path={`/`} component={HomeTopScreen} />\n                    </Switch>\n                </Fragment>\n            </Router>\n        )\n    }\n}","import React, { Component, Fragment } from 'react'\nimport { css, StyleSheet } from 'aphrodite'\nimport store from '../modules/store'\nimport { Provider } from 'react-redux'\n\nimport AppRoute from '../containers/AppRoute'\n\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <AppRoute />\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCheck, faGrinSquint, faFrown, faCircle, faSpinner } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faCheck, faGrinSquint, faFrown, faCircle, faSpinner)\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}