{"version":3,"sources":["assets/img/thumbnail.jpg","modules/window/index.js","modules/store.js","classes/circle.js","classes/canvas.js","components/canvas/GroupCircle.js","containers/canvas/GroupCircle.js","components/home/HomeTopScreen.js","containers/home/HomeTopScreen.js","components/common/screen/PreparationScreen.js","components/works/WorkTopScreen.js","containers/works/WorkTopScreen.js","components/blogs/BlogTopScreen.js","containers/blogs/BlogTopScreen.js","containers/AppRoute.js","components/AppRoute.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","RESIZE_WINDOW","prefix","initialState","windowHeight","window","innerHeight","windowWidth","innerWidth","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","createStore","reduxCreateStore","combineReducers","applyMiddleware","thunk","logger","optionStore","tempStore","Circle","context","name","positionX","positionY","size","color","_this","text","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","drawCircle","_optionStore","isSaveStore","_assertThisInitialize","assertThisInitialized","setFillCanvas","arc","Math","PI","fill","push","x","y","apply","toConsumableArray","setShadow","moveDistanceY","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","resetShadow","setTitle","_assertThisInitialize4","beginPath","font","fillStyle","textAlign","fillText","setText","_assertThisInitialize5","clickAnimation","nextAnimation","constantSize","props","timestamp","_assertThisInitialize6","animSize","animY","requestAnimationFrame","activeCircle","clearRect","i","_optionStore$i","optionName","optionX","optionY","optionSize","isActiveCircle","circle","transitionAnimation","_assertThisInitialize7","history","onClick","e","clientX","clientY","_assertThisInitialize8","rect","target","getBoundingClientRect","clickX","left","clickY","top","pow","canvasStore","Canvas","canvasContext","floor","GroupCircle","_this$props","setRef","onCircleClick","canvas","onResize","setCircle","children","addEventListener","react_default","a","createElement","className","css","styles","wrapper","titleWrapper","infoTitle","fontResize","ref","width","height","Component","StyleSheet","create","position","backgroundColor","display","right","fontSize","fontWeight","@media (max-width: 600px)","initialProps","isCircleClicked","stateHandler","handleChange","ownProps","value","defineProperty","h","w","ctx","getContext","circleOptions","ua","navigator","userAgent","toLowerCase","circleOption","responsiveX","responsiveY","responsiveSize","match","lifeCycle","componentDidMount","getRefs","componentDidUpdate","_this$props2","queue","clearTimeout","setTimeout","Enhance","compose","setDisplayName","withStateHandlers","withHandlers","refs","event","isClicked","setClickEvent","connect","dispatch","lifecycle","onlyUpdateForKeys","DisplayComponent","HomeTopScreen","console","log","react","container","profileContainer","style","paddingBottom","src","require","image","descriptionContainer","opacity","descriptionText","canvas_GroupCircle","flexDirection","justifyContent","margin","alignItems","borderRadius","objectFit","marginRight","border","animationName","from","transform","to","animationTimingFunction","animationDuration","animationDelay","maxWidth","paddingLeft","handleProps","refHandler","divDescription","PreparationScreen","message","Link","link","marginTop","textDecoration","WorkTopScreen","PreparationScreen_PreparationScreen","BlogTopScreen","component","BrowserRouter","basename","Switch","Route","path","exact","redirectHashUri","uri","location","href","includes","slice","_state$window","componentWillMount","App","react_redux_es","store","containers_AppRoute","Boolean","hostname","ReactDOM","render","App_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.96a20578.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thumbnail.79b1ce1a.jpg\";","import { dispatch } from \"rxjs/internal/observable/range\";\n\nconst prefix = 'portfolio/window/'\n\nconst RESIZE_WINDOW = prefix + 'RESIZE_WINDOW'\n\nconst initialState = {\n    windowHeight: window.innerHeight,\n    windowWidth: window.innerWidth < 600 ? window.innerWidth : 600,\n}\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case RESIZE_WINDOW:\n            const {\n                windowHeight,\n                windowWidth,\n            } = action\n            return {\n                ...state,\n                windowHeight,\n                windowWidth\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport const resizeWindow = (h, w) => ({\n    type: RESIZE_WINDOW,\n    windowHeight: h,\n    windowWidth: w\n})","import { createStore as reduxCreateStore, applyMiddleware, combineReducers } from 'redux'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nimport window from './window'\n\nfunction createStore() {\n  const store = reduxCreateStore(\n    combineReducers({\n      window\n    }),\n    applyMiddleware(\n      thunk,\n      logger,\n    )\n  );\n  \n  return store;\n}\n\nexport default createStore()","import Canvas from './canvas'\n\n// クリックされた時の処理用にx座標とy座標とsizeを保存しておく\nexport let optionStore = []\nlet tempStore = []\n\nexport default class Circle extends Canvas {\n    constructor(context, name, positionX, positionY, size, color, text = \"\") {\n        super(context, name, positionX, positionY, size, color)\n        this.text = text\n        this.canvasStore = []\n    }\n    drawCircle = (isSaveStore = true) => {\n        const {\n            context,\n            name,\n            positionX,\n            positionY,\n            size,\n            color,\n            text,\n        } = this\n        this.setFillCanvas()\n        context.arc(positionX, positionY, size, 0, Math.PI * 2)\n        context.fill()\n        if(isSaveStore) {\n            if (tempStore.length === 2) {\n                tempStore = []\n            }\n            tempStore.push({ name, x: positionX, y: positionY, size, color, text })\n            if(tempStore.length === 2) {\n                optionStore = []\n                optionStore.push(...tempStore)\n            }\n        }\n    }\n\n    setShadow = (moveDistanceY = null) => {\n        const {\n            context,\n        } = this\n        context.shadowColor = '#555'\n        context.shadowOffsetX = -0.5\n        context.shadowOffsetY = moveDistanceY !== null ? moveDistanceY : 2\n        context.shadowBlur = moveDistanceY !== null ? 1 : 8\n    }\n\n    resetShadow = () => {\n        const {\n            context\n        } = this\n        context.shadowColor = '#fff'\n        context.shadowOffsetX = 0\n        context.shadowOffsetY = 0\n        context.shadowBlur = 0\n    }\n\n    setTitle = () => {\n        const {\n            context,\n            name,\n            positionX,\n            positionY,\n        } = this\n\n        context.beginPath()\n        context.font = \"bold 22px Franklin Gothic Medium\"\n        context.fillStyle = '#333'\n        context.textAlign = \"center\";\n        context.fillText(name, positionX, positionY)\n    }\n\n    setText = () => {\n        const {\n            context,\n            text,\n            positionX,\n            positionY,\n            size\n        } = this\n\n        context.beginPath()\n        context.font = `normal 13px sans-serif`\n        context.fillStyle = '#555'\n        context.textAlign = \"center\";\n        context.fillText(text, positionX, positionY + 30)\n    }\n\n    clickAnimation = (nextAnimation, constantSize, props) => (timestamp) => {\n        const {\n            context,\n            name,\n            size,\n            positionY\n        } = this\n        // const {\n        //     windowHeight,\n        //     windowWidth,\n        // } = props\n\n        const windowHeight = window.innerHeight\n        const windowWidth = window.innerWidth\n\n        const animTime = 3\n        const animSize = size\n        const animY = positionY\n        if (animSize <= constantSize - 25) {\n            window.requestAnimationFrame(nextAnimation)\n            return\n        }\n\n        // クリックされた円を保存しておく\n        let activeCircle = {}\n        // 描画をリセット\n        context.clearRect(0, 0, windowWidth, windowHeight)\n        \n        // 再描画と同時にクリックされた円を縮小させる\n        for (let i = 0; i < optionStore.length; i++) {\n            const {\n                name: optionName,\n                x: optionX,\n                y: optionY,\n                size: optionSize,\n                color: optionColor,\n                text: optionText\n            } = optionStore[i]\n\n            const isActiveCircle = optionName === name\n\n            const nextSize = isActiveCircle ? animSize - animTime : optionSize\n            const nextY = isActiveCircle ? animY + 2 : optionY\n            const circle = new Circle(context, optionName, optionX, nextY, nextSize, optionColor, optionText)\n            if (isActiveCircle) {\n                activeCircle = circle\n                circle.setShadow(0.1)\n            }else{\n                circle.setShadow()\n            }\n            circle.drawCircle()\n            circle.resetShadow()\n            circle.setTitle()\n            circle.setText()\n        }\n        window.requestAnimationFrame(activeCircle.clickAnimation(nextAnimation, constantSize, props))\n    }\n\n    transitionAnimation = (props) => (timestamp) => {\n        const {\n            windowHeight,\n            windowWidth,\n        } = props\n        const {\n            context,\n            name,\n            positionX,\n            positionY,\n            size,\n            color,\n        } = this\n        if (size > windowHeight && size > windowWidth) {\n            switch (name) {\n                case 'Works':\n                    props.history.push('/works')\n                    return\n                case 'Blogs':\n                    props.history.push('/blogs')\n                    return\n            }\n            return\n        }\n\n        let animSize = size\n        const animTime = 20\n        const circle = new Circle(context, name, positionX, positionY, animSize + animTime, color)\n        circle.drawCircle(false)\n\n        window.requestAnimationFrame(circle.transitionAnimation(props))\n    }\n\n    onClick = (e, props) => {\n        const {\n            clientX,\n            clientY\n        } = e\n        const {\n            name,\n            positionX,\n            positionY,\n            size\n        } = this\n        const rect = e.target.getBoundingClientRect()\n        const clickX = clientX - rect.left\n        const clickY = clientY - rect.top\n        const clickPoint = (clickX - positionX) ** 2 + (clickY - positionY) ** 2\n        const circleArea = size ** 2\n        if (clickPoint < circleArea) {\n            return true\n        }\n        return false\n    }\n}","export default class Canvas {\n    constructor(canvasContext, name = '', x = 0, y = 0, size = 0, color = 'black') {\n        this.context = canvasContext\n        this.name = name\n        this.positionX = Math.floor(x)\n        this.positionY = Math.floor(y)\n        this.size = Math.floor(size)\n        this.color = color\n    }\n\n    setFillCanvas = () => {\n        const {\n            context,\n            name,\n            positionX,\n            positionY,\n            color,\n        } = this\n        context.beginPath()\n        context.fillStyle = color\n    }\n}","import React, { Component, Fragment } from 'react'\nimport { css, StyleSheet } from 'aphrodite'\n\nexport default class GroupCircle extends Component {\n    render() {\n        const {\n            setRef,\n            onCircleClick,\n            canvas,\n            onResize,\n            setCircle,\n            windowHeight,\n            windowWidth,\n            children,\n        } = this.props\n        if (canvas !== null) {\n            canvas.addEventListener('click', onCircleClick(this.props))\n        }\n\n        const title = 'Information'\n        return (\n            <div className={css(styles.wrapper)} >\n                <div className={css(styles.titleWrapper)}>\n                    <h3 className={css(styles.infoTitle, styles.fontResize)}>{title}</h3>\n                </div>\n                <canvas\n                    ref={e => setRef(e, \"canvas\")}\n                    className={css(styles.canvas)}\n                    width={windowWidth}\n                    height={windowHeight}\n                />\n            </div>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        position: 'relative',\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#FF0066',\n    },\n    titleWrapper: {\n        display: 'inline-block',\n        position: 'absolute',\n        top: '10%',\n        left: 0,\n        right: 0,\n        textAlign: 'center',\n    },\n    infoTitle: {\n        fontSize: 50,\n        fontWeight: 'bold',\n        color: '#fff'\n    },\n    fontResize: {\n        '@media (max-width: 600px)': {\n            fontSize: 30,\n        }\n    },\n    canvas: {\n        backgroundColor: '#FF0066'\n    },\n})","import { compose, withStateHandlers, setDisplayName, lifecycle, onlyUpdateForKeys, withHandlers } from 'recompose'\nimport { connect } from 'react-redux'\n\nimport Circle from '../../classes/circle'\nimport { optionStore } from '../../classes/circle'\nimport DisplayComponent from '../../components/canvas/GroupCircle'\n\nimport * as WindowAction from '../../modules/window'\n\n\nconst display = \"GroupCircle\"\n\nconst initialProps = {\n    canvas: null,\n    windowHeight: window.innerHeight,\n    windowWidth: window.innerWidth,\n    isCircleClicked: false\n}\n\nconst canRenderProps = [\n    'canvas',\n    'windowHeight',\n    'windowWidth',\n]\n\n// propsの値を変更する\nconst handleChange = (ownProps) => (name, value) => {\n    return {\n        [name]: value\n    }\n}\n\nconst onResize = (ownProps) => (h, w) => {\n    return {\n        windowHeight: h,\n        windowWidth: w,\n    }\n}\n// propsの変更を行うhandler\nconst stateHandler = {\n    handleChange,\n    onResize\n}\n\nconst setCircle = (ownProps) => (canvas) => {\n    const {\n        windowHeight,\n        windowWidth\n    } = ownProps\n    const height = windowHeight\n    const width = windowWidth\n\n    const ctx = canvas.getContext('2d')\n    ctx.clearRect(0, 0, width, height);\n    // スマートフォン用の設定\n    const circleOptions = [\n        {\n            name: 'Blogs',\n            x: width * 0.34,\n            y: height * 0.6,\n            size: width * 0.25,\n            color: '#fff',\n            text: '学びの記録'\n        },\n        {\n            name: 'Works',\n            x: width * 0.66,\n            y: height * 0.51,\n            size: width * 0.25,\n            color: '#fff',\n            text: '作品一覧'\n        },\n    ]\n\n    const ua = navigator.userAgent.toLowerCase()\n    for (let i = 0; i < circleOptions.length; i++) {\n\n        const circleOption = circleOptions[i]\n        const {\n            name,\n            x,\n            y,\n            size,\n            color,\n            text\n        } = circleOption\n\n        let responsiveX = x\n        let responsiveY = y\n        let responsiveSize = size\n        if (ua.match(/android|iphone/) === null) {\n            responsiveX *= name === 'Blogs' ? 1.25 : 0.89\n            responsiveY *= name === 'Blogs' ? 1.1 : 1.08\n            responsiveSize *= width > 1000 ? 0.5 : 0.65\n        }\n        if (ua.match(/ipad/) !== null) {\n            responsiveX *= name === 'Blogs' ? 0.8 : 1.1\n            responsiveY *= name === 'Blogs' ? 1 : 1.1\n            responsiveSize = width * 0.25\n        }\n\n        const circle = new Circle(ctx, name, responsiveX, responsiveY, responsiveSize, color, text)\n        circle.setShadow()\n        circle.drawCircle()\n        circle.resetShadow()\n        circle.setTitle()\n        circle.setText()\n    }\n}\n\n\nconst setClickEvent = (ownProps) => {\n    // クリックされているかどうかを確認する変数\n    let isClicked = false\n    return {\n        onCircleClick: (ownProps) => (props) => (e) => {\n            const {\n                canvas,\n                handleChange,\n                isCircleClicked\n            } = ownProps\n\n            // circleがクリックされているなら処理をしない\n            if (isClicked) {\n                return\n            }\n            \n            // クリックを禁止する\n            isClicked = true\n\n            const ctx = canvas.getContext('2d')\n            let activeCircle = null\n            for (let i = 0; i < optionStore.length; i++) {\n                const {\n                    name,\n                    x,\n                    y,\n                    size,\n                    color,\n                    text\n                } = optionStore[i]\n                const circle = new Circle(ctx, name, x, y, size, color, text)\n                const isAnimation = circle.onClick(e, props)\n                if (isAnimation) {\n                    // 配列の中で最後の要素かつ円の範囲をクリックされているものを代入\n                    activeCircle = circle\n                }\n            }\n            // 手前の円のみにアニメーションを付ける\n            if (activeCircle !== null) {\n                window.requestAnimationFrame(\n                    activeCircle.clickAnimation(\n                        activeCircle.transitionAnimation(props),\n                        activeCircle.size,\n                        props\n                    )\n                )\n            }\n        }\n    }\n}\n\nconst setRef = () => {\n    let refs = {}\n    return {\n        setRef: ownProps => (event, name) => (refs[name] = event),\n        getRefs: ownProps => () => refs\n    }\n}\n// propsの変更を行わないhandler\nconst handleProps = (ownProps) => ({\n    ...setRef(),\n    ...setClickEvent(ownProps),\n    setCircle,\n})\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n})\n\n// componentDidMountなどのライフサイクルを記述する\nconst lifeCycle = {\n    componentDidMount() {\n        const {\n            setCircle,\n            getRefs\n        } = this.props\n\n        const refs = getRefs()\n        const {\n            canvas\n        } = refs\n        setCircle(canvas)\n        this.props.handleChange('canvas', canvas)\n    },\n    componentDidUpdate() {\n        const {\n            onResize,\n            canvas,\n            setCircle\n        } = this.props\n        if (canvas !== null) {\n            let queue = null\n            window.addEventListener('resize', () => {\n                clearTimeout(queue)\n                queue = setTimeout(() => {\n                    onResize(window.innerHeight, window.innerWidth)\n                    setCircle(canvas)\n                }, 100)\n            })\n        }\n    }\n}\n\nconst Enhance = compose(\n    setDisplayName(display),\n    withStateHandlers(\n        initialProps,\n        stateHandler\n    ),\n    withHandlers(handleProps),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    ),\n    lifecycle(lifeCycle),\n    onlyUpdateForKeys(canRenderProps),\n)\n\nexport default Enhance(DisplayComponent)","import React, { Component, Fragment } from 'react'\nimport { css, StyleSheet } from 'aphrodite'\n\nimport GroupCirle from '../../containers/canvas/GroupCircle'\n\nexport default class HomeTopScreen extends Component {\n    render() {\n        console.log(this.props)\n        return (\n            <Fragment>\n                <div className={css(styles.container)}>\n                    <div className={css(styles.profileContainer)} style={{ paddingBottom: 50 }}>\n                        <img src={require('../../assets/img/thumbnail.jpg')} className={css(styles.image)} />\n                        <p className={css(styles.name)}>Keiya Sasaki</p>\n                    </div>\n                    <div\n                        className={css(styles.descriptionContainer)}\n                        style={{ opacity: 0 }}\n                        ref={this.props.setRef('divDescription')}\n                    >\n                        <table className={css(styles.descriptionText)}>\n                            <tbody>\n                                <tr>\n                                    <td>生年月日</td><td>1999/02/10</td>\n                                </tr>\n                                <tr>\n                                    <td style={{ width: '40%' }}>プログラミング歴</td><td>2017/06/01 〜 現在</td>\n                                </tr>\n                                <tr>\n                                    <td>言語</td><td>Ruby(Ruby on Rails), PHP(FuelPHP), Go, React, ReactNative</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <br />\n                        <p className={css(styles.descriptionText)}>ちなみにこのサイトはReactで書いています。</p><br />\n                        <span style={{ fontWeight: 'bold' }}>Career</span><br />\n                        <table className={css(styles.descriptionText)}>\n                            <tbody>\n                                <tr>\n                                    <td>2017/06/01</td><td>プログラミング学習開始</td>\n                                </tr>\n                                <tr>\n                                    <td>2018/03/01</td><td>株式会社AppRunsでエンジニアとしてアルバイト</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <GroupCirle history={this.props.history} />\n            </Fragment>\n        )\n    }\n}\n\nconst showImage = [\n    {\n        'from': {\n            transform: 'translate(55%, 0)'\n        },\n        'to': {\n            transform: 'translate(0, 0)'\n        }\n    }\n]\n\nconst showUserName = [\n    {\n        'from': {\n            opacity: 0,\n        },\n        'to': {\n            opacity: 1,\n        },\n    }\n]\n\nconst showDescription = [\n    {\n        'from': {\n            opacity: 0,\n            transform: 'translate(0, 100px)'\n        },\n        'to': {\n            opacity: 1,\n            transform: 'translate(0, 0)'\n        },\n    }\n]\n\nconst styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        width: '100vw',\n        height: '100vh'\n    },\n    profileContainer: {\n        display: 'flex',\n        margin: '0 auto',\n        width: '90%',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    image: {\n        width: 70,\n        height: 70,\n        borderRadius: '50%',\n        objectFit: 'cover',\n        marginRight: 20,\n        border: 'solid 1px #FFFF00',\n        animationName: showImage,\n        animationTimingFunction: 'easy',\n        animationDuration: '2s',\n        animationDelay: '0s'\n    },\n    name: {\n        fontSize: 20,\n        color: '#333',\n        fontWeight: 600,\n        animationName: showUserName,\n        animationTimingFunction: 'easy',\n        animationDuration: '4s',\n        animationDelay: '0s'\n    },\n    descriptionContainer: {\n        width: '90%',\n        maxWidth: 480,\n        margin: '0 auto',\n        paddingLeft: 20,\n        animationName: showDescription,\n        animationDuration: '3s',\n        animationTimingFunction: 'ease',\n        animationDelay: '2s',\n    },\n    descriptionText: {\n        color: '#555',\n        fontSize: 15,\n    },\n})","import { compose, withStateHandlers, setDisplayName, lifecycle, onlyUpdateForKeys, withHandlers } from 'recompose'\nimport { connect } from 'react-redux'\n\nimport DisplayComponent from '../../components/home/HomeTopScreen'\n\nconst display = \"HomeTopScreen\"\n\nconst initialProps = {\n}\n\nconst canRenderProps = [\n    \n]\n\n// propsの値を変更する\nconst handleChange = (ownProps) => {\n    return (name, value) => {\n        return {\n            [name]: value\n        }\n    }\n}\n\n// propsの変更を行うhandler\nconst stateHandler = {\n    handleChange,\n}\n\nconst refHandler = () => {\n    let refs = {}\n    return {\n        setRef: (ownProps) => name => e => (refs[name] = e),\n        getRefs: (ownProps) => () => refs\n    }\n}\n\n// propsの変更を行わないhandler\nconst handleProps = {\n    ...refHandler()\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n\n})\n\n// componentDidMountなどのライフサイクルを記述する\nconst lifeCycle = {\n    componentDidMount() {\n        const {\n            getRefs\n        } = this.props\n        const refs = getRefs()\n        const {\n            divDescription\n        } = refs\n        setTimeout(() => {\n            divDescription.style.opacity = 1\n        }, 3500)\n    }\n\n}\n\nconst Enhance = compose(\n    setDisplayName(display),\n    withStateHandlers(\n        initialProps,\n        stateHandler\n    ),\n    withHandlers(handleProps),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    ),\n    lifecycle(lifeCycle),\n    onlyUpdateForKeys(canRenderProps),\n)\n\nexport default Enhance(DisplayComponent)","import React, { Component, Fragment } from 'react'\nimport { StyleSheet, css } from 'aphrodite'\nimport { Link } from 'react-router-dom'\n\nexport default class PreparationScreen extends Component {\n    render() {\n        return (\n            <div className={css(styles.container)}>\n                <h3 className={css(styles.message)}>準備中です...</h3>\n                <Link to='/' className={css(styles.link)}>トップへ</Link>\n            </div>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        width: '100vw',\n        height: '100vh',\n        backgroundColor: '#fff'\n    },\n    message: {\n        textAlign: 'center',\n        color: 'tomato',\n        fontSize: 25\n    },\n    link: {\n        marginTop: 30,\n        textAlign: 'center',\n        color: 'blue',\n        fontSize: 16,\n        textDecoration: 'none'\n    }\n})","import React, { Component, Fragment } from 'react'\nimport { StyleSheet, css } from 'aphrodite'\nimport PreparationScreen from '../common/screen/PreparationScreen';\n\nexport default class WorkTopScreen extends Component {\n    render() {\n        return (\n            <div>\n                <PreparationScreen />\n            </div>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    \n})","import { compose, withStateHandlers, setDisplayName, lifecycle, onlyUpdateForKeys, withHandlers } from 'recompose'\nimport { connect } from 'react-redux'\n\nimport DisplayComponent from '../../components/works/WorkTopScreen'\n\nconst display = 'WorkTopScreen'\n\nconst initialProps = {\n}\n\nconst canRenderProps = [\n    \n]\n\n// propsの値を変更する\nconst handleChange = (ownProps) => {\n    return (name, value) => {\n        return {\n            [name]: value\n        }\n    }\n}\n\n// propsの変更を行うhandler\nconst stateHandler = {\n    handleChange,\n}\n\nconst refHandler = () => {\n    let refs = {}\n    return {\n        setRef: (ownProps) => name => e => (refs[name] = e),\n        getRefs: (ownProps) => () => refs\n    }\n}\n\n// propsの変更を行わないhandler\nconst handleProps = {\n    ...refHandler()\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n\n})\n\n// componentDidMountなどのライフサイクルを記述する\nconst lifeCycle = {\n    \n\n}\n\nconst Enhance = compose(\n    setDisplayName(display),\n    withStateHandlers(\n        initialProps,\n        stateHandler\n    ),\n    withHandlers(handleProps),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    ),\n    lifecycle(lifeCycle),\n    onlyUpdateForKeys(canRenderProps),\n)\n\nexport default Enhance(DisplayComponent)","import React, { Component, Fragment } from 'react'\nimport { StyleSheet, css } from 'aphrodite'\nimport PreparationScreen from '../common/screen/PreparationScreen';\n\nexport default class BlogTopScreen extends Component {\n    render() {\n        return (\n            <div>\n                <PreparationScreen />\n            </div>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    \n})","import { compose, withStateHandlers, setDisplayName, lifecycle, onlyUpdateForKeys, withHandlers } from 'recompose'\nimport { connect } from 'react-redux'\n\nimport DisplayComponent from '../../components/blogs/BlogTopScreen'\n\nconst display = 'BlogTopScreen'\n\nconst initialProps = {\n}\n\nconst canRenderProps = [\n    \n]\n\n// propsの値を変更する\nconst handleChange = (ownProps) => {\n    return (name, value) => {\n        return {\n            [name]: value\n        }\n    }\n}\n\n// propsの変更を行うhandler\nconst stateHandler = {\n    handleChange,\n}\n\nconst refHandler = () => {\n    let refs = {}\n    return {\n        setRef: (ownProps) => name => e => (refs[name] = e),\n        getRefs: (ownProps) => () => refs\n    }\n}\n\n// propsの変更を行わないhandler\nconst handleProps = {\n    ...refHandler()\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n\n})\n\n// componentDidMountなどのライフサイクルを記述する\nconst lifeCycle = {\n    \n\n}\n\nconst Enhance = compose(\n    setDisplayName(display),\n    withStateHandlers(\n        initialProps,\n        stateHandler\n    ),\n    withHandlers(handleProps),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    ),\n    lifecycle(lifeCycle),\n    onlyUpdateForKeys(canRenderProps),\n)\n\nexport default Enhance(DisplayComponent)","import { compose, withStateHandlers, setDisplayName, lifecycle, onlyUpdateForKeys, withHandlers } from 'recompose'\nimport { connect } from 'react-redux'\n\nimport * as WindowActions from '../modules/window'\n\nimport AppRoute from '../components/AppRoute'\n\nconst display = \"AppRoute\"\nconst component = AppRoute\n\nconst initialProps = {\n}\n\nconst canRenderProps = []\n\n// propsの値を変更する\nconst handleChange = (ownProps) => {\n    return (name, value) => {\n        return {\n            [name]: value\n        }\n    }\n}\n\n// propsの変更を行うhandler\nconst stateHandler = {\n    handleChange,\n}\n\nconst redirectHashUri = (ownProps) => () => {\n    const { location } = window\n    let uri = location.href\n\n    const hasHash = uri.includes('/#/')\n    if (!hasHash) {\n        // http://example.com/ 最後に「 / 」が入っているなら取り除く\n        if (uri.slice(-1) !== '/') {\n            // 最後の文字以外を取得\n            uri += '/'\n        }\n        // 指定のuriに遷移\n        window.location = uri + '#/'\n    }\n}\n\n// propsの変更を行わないhandler\nconst handleProps = (ownProps) => ({\n    redirectHashUri\n})\n\nconst mapStateToProps = (state) => {\n    const {\n        windowHeight,\n        windowWidth\n    } = state.window\n    return {\n        windowHeight,\n        windowWidth\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n})\n\n// componentDidMountなどのライフサイクルを記述する\nconst lifeCycle = {\n    componentWillMount() {\n        this.props.redirectHashUri()\n    }\n\n}\n\nconst Enhance = compose(\n    setDisplayName(display),\n    withStateHandlers(\n        initialProps,\n        stateHandler\n    ),\n    withHandlers(handleProps),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    ),\n    lifecycle(lifeCycle),\n    onlyUpdateForKeys(canRenderProps),\n)\n\nexport default Enhance(component)","import React, { Component, Fragment } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport HomeTopScreen from '../containers/home/HomeTopScreen'\nimport WorkTopScreen from '../containers/works/WorkTopScreen'\nimport BlogTopScreen from '../containers/blogs/BlogTopScreen'\n\nexport default class AppRoute extends Component {\n    render() {\n        return (\n            <Router basename='/portfolio/#'>\n                <Fragment>\n                    <Switch>\n                        <Route path={`/works`} component={WorkTopScreen} />\n                        <Route path={`/blogs`} component={BlogTopScreen} />\n                        <Route exact path={`/`} component={HomeTopScreen} />\n                    </Switch>\n                </Fragment>\n            </Router>\n        )\n    }\n}","import React, { Component, Fragment } from 'react'\nimport { css, StyleSheet } from 'aphrodite'\nimport store from '../modules/store'\nimport { Provider } from 'react-redux'\n\nimport AppRoute from '../containers/AppRoute'\n\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <AppRoute />\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}