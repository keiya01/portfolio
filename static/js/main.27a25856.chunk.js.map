{"version":3,"sources":["assets/img/thumbnail.jpg","modules/window/index.js","modules/store.js","classes/circle.js","classes/canvas.js","components/canvas/GroupCircle.js","containers/canvas/GroupCircle.js","components/home/HomeTopScreen.js","containers/home/HomeTopScreen.js","containers/AppRoute.js","components/AppRoute.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","RESIZE_WINDOW","prefix","initialState","windowHeight","window","innerHeight","windowWidth","innerWidth","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","createStore","reduxCreateStore","combineReducers","applyMiddleware","thunk","logger","optionStore","Circle","drawCircle","_assertThisInitialize","assertThisInitialized","_this","context","name","positionX","positionY","size","color","setFillCanvas","arc","Math","PI","fill","push","x","y","setShadow","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","resetShadow","setText","_assertThisInitialize4","beginPath","font","fillStyle","textAlign","fillText","clickAnimation","nextAnimation","constantSize","timestamp","_assertThisInitialize5","animSize","console","log","requestAnimationFrame","circle","transitionAnimation","props","navigate","_assertThisInitialize6","history","onClick","e","clientX","clientY","_assertThisInitialize7","rect","target","getBoundingClientRect","clickX","left","clickY","top","pow","Canvas","canvasContext","this","classCallCheck","GroupCircle","_this$props","setRef","onCircleClick","canvas","onResize","setCircle","children","addEventListener","react_default","a","createElement","className","css","styles","wrapper","titleWrapper","infoTitle","fontResize","ref","width","height","Component","StyleSheet","create","position","backgroundColor","display","right","fontSize","fontWeight","@media (max-width: 600px)","component","initialProps","stateHandler","handleChange","ownProps","value","defineProperty","h","w","handleProps","refs","event","getRefs","ctx","getContext","clearRect","circleOptions","ua","navigator","userAgent","toLowerCase","i","circleOption","responsiveX","responsiveY","responsiveSize","match","activeCircle","_optionStore$i","lifeCycle","componentDidMount","componentDidUpdate","_this$props2","queue","clearTimeout","setTimeout","Enhance","compose","setDisplayName","withStateHandlers","withHandlers","connect","dispatch","lifecycle","onlyUpdateForKeys","HomeTopScreen","react","container","textContainer","style","paddingBottom","src","require","image","descriptionContainer","descriptionText","canvas_GroupCircle","flexDirection","justifyContent","borderRadius","objectFit","marginRight","border","margin","alignItems","maxWidth","paddingLeft","BrowserRouter","Route","exact","path","_state$window","App","react_redux_es","store","containers_AppRoute","Boolean","location","hostname","ReactDOM","render","App_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.27a25856.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thumbnail.79b1ce1a.jpg\";","import { dispatch } from \"rxjs/internal/observable/range\";\n\nconst prefix = 'portfolio/window/'\n\nconst RESIZE_WINDOW = prefix + 'RESIZE_WINDOW'\n\nconst initialState = {\n    windowHeight: window.innerHeight,\n    windowWidth: window.innerWidth < 600 ? window.innerWidth : 600,\n}\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case RESIZE_WINDOW:\n            const {\n                windowHeight,\n                windowWidth,\n            } = action\n            return {\n                ...state,\n                windowHeight,\n                windowWidth\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport const resizeWindow = (h, w) => ({\n    type: RESIZE_WINDOW,\n    windowHeight: h,\n    windowWidth: w\n})","import { createStore as reduxCreateStore, applyMiddleware, combineReducers } from 'redux'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nimport window from './window'\n\nfunction createStore() {\n  const store = reduxCreateStore(\n    combineReducers({\n      window\n    }),\n    applyMiddleware(\n      thunk,\n      logger,\n    )\n  );\n  \n  return store;\n}\n\nexport default createStore()","import Canvas from './canvas'\n\n// クリックされた時の処理用にx座標とy座標とsizeを保存しておく\nexport let optionStore = []\n\nexport default class Circle extends Canvas {\n    drawCircle = () => {\n        const {\n            context,\n            name,\n            positionX,\n            positionY,\n            size,\n            color\n        } = this\n        this.setFillCanvas()\n        context.arc(positionX, positionY, size, 0, Math.PI * 2)\n        context.fill()\n        if (optionStore.length < 2) {\n            optionStore.push({ name, x: positionX, y: positionY, size, color })\n        }\n    }\n\n    setShadow = () => {\n        const {\n            context,\n        } = this\n        context.shadowColor = '#555'\n        context.shadowOffsetX = -0.5\n        context.shadowOffsetY = 2\n        context.shadowBlur = 8\n    }\n\n    resetShadow = () => {\n        const {\n            context\n        } = this\n        context.shadowColor = '#fff'\n        context.shadowOffsetX = 0\n        context.shadowOffsetY = 0\n        context.shadowBlur = 0\n    }\n\n    setText = () => {\n        const {\n            context,\n            name,\n            positionX,\n            positionY,\n        } = this\n\n        context.beginPath()\n        context.font = \"bold 22px Franklin Gothic Medium\"\n        context.fillStyle = '#333'\n        context.textAlign = \"center\";\n        context.fillText(name, positionX, positionY + 5)\n    }\n\n    clickAnimation = (nextAnimation, constantSize) => (timestamp) => {\n        const {\n            context,\n            name,\n            positionX,\n            positionY,\n            size,\n            color\n        } = this\n        const animTime = 0.1\n        const animSize = size\n        if(animSize === constantSize - 10) {\n            console.log('next!!!')\n            window.requestAnimationFrame(nextAnimation)\n            return\n        }\n        console.log(animSize, size, constantSize)\n        const circle = new Circle(context, name, positionX, positionY, animSize - animTime, color)\n        circle.drawCircle()\n        window.requestAnimationFrame(circle.clickAnimation(nextAnimation, constantSize))\n    }\n\n    transitionAnimation = (props, navigate) => (timestamp) => {\n        const {\n            windowHeight,\n            windowWidth,\n        } = props\n        const {\n            context,\n            name,\n            positionX,\n            positionY,\n            size,\n            color,\n        } = this\n        if (size > windowHeight && size > windowWidth) {\n            switch (name) {\n                case 'Works':\n                    props.history.push('/portfolio/works')\n                    return\n                case 'Blogs':\n                    props.history.push('/portfolio/blogs')\n                    return\n            }\n            return\n        }\n\n        let animSize = size\n        const animTime = 20\n        const circle = new Circle(context, name, positionX, positionY, animSize + animTime, color)\n        circle.drawCircle()\n\n        window.requestAnimationFrame(circle.transitionAnimation(props))\n    }\n\n    onClick = (e, props) => {\n        const {\n            clientX,\n            clientY\n        } = e\n        const {\n            name,\n            positionX,\n            positionY,\n            size\n        } = this\n        const rect = e.target.getBoundingClientRect()\n        const clickX = clientX - rect.left\n        const clickY = clientY - rect.top\n        const clickPoint = (clickX - positionX) ** 2 + (clickY - positionY) ** 2\n        const circleArea = size ** 2\n        if (clickPoint < circleArea) {\n            return true\n        }\n        return false\n    }\n}","export default class Canvas {\n    constructor(canvasContext, name = '', x = 0, y = 0, size = 0, color = 'black') {\n        this.context = canvasContext\n        this.name = name\n        this.positionX = x\n        this.positionY = y\n        this.size = size\n        this.color = color\n    }\n\n    setFillCanvas = () => {\n        const {\n            context,\n            name,\n            positionX,\n            positionY,\n            color,\n        } = this\n        context.beginPath()\n        context.fillStyle = color\n    }\n}","import React, { Component, Fragment } from 'react'\nimport { css, StyleSheet } from 'aphrodite'\n\nexport default class GroupCircle extends Component {\n    render() {\n        const {\n            setRef,\n            onCircleClick,\n            canvas,\n            onResize,\n            setCircle,\n            windowHeight,\n            windowWidth,\n            children\n        } = this.props\n        if (canvas !== null) {\n            canvas.addEventListener('click', onCircleClick(this.props))\n        }\n\n        const title = 'Information'\n        return (\n            <div className={css(styles.wrapper)} >\n                <div className={css(styles.titleWrapper)}>\n                    <h3 className={css(styles.infoTitle, styles.fontResize)}>{title}</h3>\n                </div>\n                <canvas\n                    ref={e => setRef(e, \"canvas\")}\n                    className={css(styles.canvas)}\n                    width={windowWidth}\n                    height={windowHeight}\n                />\n            </div>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        position: 'relative',\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#fff',\n    },\n    titleWrapper: {\n        display: 'inline-block',\n        position: 'absolute',\n        top: '10%',\n        left: 0,\n        right: 0,\n        textAlign: 'center',\n    },\n    infoTitle: {\n        fontSize: 50,\n        fontWeight: 'bold',\n        color: '#fff'\n    },\n    fontResize: {\n        '@media (max-width: 600px)': {\n            fontSize: 30,\n        }\n    },\n    canvas: {\n        backgroundColor: '#FF0066'\n    },\n})","import { compose, withStateHandlers, setDisplayName, lifecycle, onlyUpdateForKeys, withHandlers } from 'recompose'\nimport { connect } from 'react-redux'\n\nimport Circle from '../../classes/circle'\nimport { optionStore } from '../../classes/circle'\nimport GroupCircle from '../../components/canvas/GroupCircle'\n\nimport * as WindowAction from '../../modules/window'\n\n\nconst display = \"GroupCircle\"\nconst component = GroupCircle\n\nconst initialProps = {\n    canvas: null,\n    windowHeight: window.innerHeight,\n    windowWidth: window.innerWidth,\n}\n\nconst canRenderProps = [\n    'canvas',\n    'windowHeight',\n    'windowWidth',\n]\n\n// propsの値を変更する\nconst handleChange = (ownProps) => (name, value) => {\n    return {\n        [name]: value\n    }\n}\n\nconst onResize = (ownProps) => (h, w) => {\n    console.log(h, w)\n\n    return {\n        windowHeight: h,\n        windowWidth: w,\n    }\n}\n// propsの変更を行うhandler\nconst stateHandler = {\n    handleChange,\n    onResize\n}\n\nconst setCircle = (ownProps) => (canvas) => {\n    const {\n        windowHeight,\n        windowWidth\n    } = ownProps\n    const height = windowHeight\n    const width = windowWidth\n\n    const ctx = canvas.getContext('2d')\n    ctx.clearRect(0, 0, width, height);\n    // スマートフォン用の設定\n    const circleOptions = [\n        {\n            name: 'Blogs',\n            x: width * 0.34,\n            y: height * 0.6,\n            size: width * 0.25,\n            color: '#fff'\n        },\n        {\n            name: 'Works',\n            x: width * 0.66,\n            y: height * 0.51,\n            size: width * 0.25,\n            color: '#fff'\n        },\n    ]\n\n    const ua = navigator.userAgent.toLowerCase()\n    for (let i = 0; i < circleOptions.length; i++) {\n\n        const circleOption = circleOptions[i]\n        const {\n            name,\n            x,\n            y,\n            size,\n            color\n        } = circleOption\n\n        let responsiveX = x\n        let responsiveY = y\n        let responsiveSize = size\n        if (ua.match(/android|iphone/) === null) {\n            responsiveX *= name === 'Blogs' ? 1.25 : 0.89\n            responsiveY *= name === 'Blogs' ? 1.1 : 1.08\n            responsiveSize *= width > 1000 ? 0.5 : 0.65\n        }\n        if (ua.match(/ipad/) !== null) {\n            responsiveX *= name === 'Blogs' ? 0.8 : 1.1\n            responsiveY *= name === 'Blogs' ? 1 : 1.1\n            responsiveSize = width * 0.25\n        }\n\n        const circle = new Circle(ctx, name, responsiveX, responsiveY, responsiveSize, color)\n        circle.setShadow()\n        circle.drawCircle()\n        circle.resetShadow()\n        circle.setText()\n    }\n}\n\n\nconst onCircleClick = (ownProps) => (props) => (e) => {\n    const ctx = ownProps.canvas.getContext('2d')\n    let activeCircle = {}\n    for (let i = 0; i < optionStore.length; i++) {\n        const {\n            name,\n            x,\n            y,\n            size,\n            color\n        } = optionStore[i]\n        const circle = new Circle(ctx, name, x, y, size, color)\n        const isAnimation = circle.onClick(e, props)\n        if(isAnimation) {\n            // 配列の中で最後の要素かつ円の範囲をクリックされているものを代入\n            activeCircle = circle\n        }\n    }\n    // 手前の円のみにアニメーションを付ける\n    window.requestAnimationFrame(activeCircle.transitionAnimation(props))\n}\n\nconst setRef = () => {\n    let refs = {}\n    return {\n        setRef: ownProps => (event, name) => (refs[name] = event),\n        getRefs: ownProps => () => refs\n    }\n}\n// propsの変更を行わないhandler\nconst handleProps = {\n    ...setRef(),\n    setCircle,\n    onCircleClick\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n})\n\n// componentDidMountなどのライフサイクルを記述する\nconst lifeCycle = {\n    componentDidMount() {\n        const {\n            setCircle,\n            getRefs\n        } = this.props\n\n        const refs = getRefs()\n        const {\n            canvas\n        } = refs\n        setCircle(canvas)\n        this.props.handleChange('canvas', canvas)\n    },\n    componentDidUpdate() {\n        const {\n            onResize,\n            canvas,\n            setCircle\n        } = this.props\n        if (canvas !== null) {\n            let queue = null\n            window.addEventListener('resize', () => {\n                clearTimeout(queue)\n                queue = setTimeout(() => {\n                    onResize(window.innerHeight, window.innerWidth)\n                    setCircle(canvas)\n                }, 100)\n            })\n        }\n    }\n}\n\nconst Enhance = compose(\n    setDisplayName(display),\n    withStateHandlers(\n        initialProps,\n        stateHandler\n    ),\n    withHandlers(handleProps),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    ),\n    lifecycle(lifeCycle),\n    onlyUpdateForKeys(canRenderProps),\n)\n\nexport default Enhance(component)","import React, { Component, Fragment } from 'react'\nimport { css, StyleSheet } from 'aphrodite'\n\nimport GroupCirle from '../../containers/canvas/GroupCircle'\n\nexport default class HomeTopScreen extends Component {\n    render() {\n        return (\n            <Fragment>\n                <div className={css(styles.container)}>\n                    <div className={css(styles.textContainer)} style={{ paddingBottom: 50 }}>\n                        <img src={require('../../assets/img/thumbnail.jpg')} className={css(styles.image)} />\n                        <p className={css(styles.name)}>Keiya Sasaki</p>\n                    </div>\n                    <div className={css(styles.descriptionContainer)}>\n                        <table className={css(styles.descriptionText)}>\n                            <tbody>\n                                <tr>\n                                    <td>生年月日</td><td>1999/02/10</td>\n                                </tr>\n                                <tr>\n                                    <td style={{ width: '40%' }}>プログラミング歴</td><td>2017/06/01 〜 現在</td>\n                                </tr>\n                                <tr>\n                                    <td>言語</td><td>Ruby(Ruby on Rails), PHP(FuelPHP), Go, React, ReactNative</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <br />\n                        <p className={css(styles.descriptionText)}>ちなみにこのサイトはReactで書いています。</p><br />\n                        <span style={{ fontWeight: 'bold' }}>Career</span><br />\n                        <table className={css(styles.descriptionText)}>\n                            <tbody>\n                                <tr>\n                                    <td>2017/06/01</td><td>プログラミング学習開始</td>\n                                </tr>\n                                <tr>\n                                    <td>2018/03/01</td><td>株式会社AppRunsでエンジニアとしてアルバイト</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <GroupCirle history={this.props.history} />\n            </Fragment>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        width: '100vw',\n        height: '100vh'\n    },\n    image: {\n        width: 70,\n        height: 70,\n        borderRadius: '50%',\n        objectFit: 'cover',\n        marginRight: 20,\n        border: 'solid 1px #FFFF00',\n    },\n    name: {\n        fontSize: 20,\n        color: '#333',\n        fontWeight: 600,\n    },\n    textContainer: {\n        display: 'flex',\n        margin: '0 auto',\n        width: '90%',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    descriptionContainer: {\n        display: 'inline-block',\n        width: '90%',\n        maxWidth: 480,\n        margin: '0 auto',\n        paddingLeft: 20\n    },\n    descriptionText: {\n        color: '#555',\n        fontSize: 15,\n    },\n})","import { compose, withStateHandlers, setDisplayName, lifecycle, onlyUpdateForKeys, withHandlers } from 'recompose'\nimport { connect } from 'react-redux'\n\nimport HomeTopScreen from '../../components/home/HomeTopScreen'\n\nconst display = \"HomeTopScreen\"\nconst component = HomeTopScreen\n\nconst initialProps = {\n}\n\nconst canRenderProps = [\n    \n]\n\n// propsの値を変更する\nconst handleChange = (ownProps) => {\n    return (name, value) => {\n        return {\n            [name]: value\n        }\n    }\n}\n\n// propsの変更を行うhandler\nconst stateHandler = {\n    handleChange,\n}\n\n// propsの変更を行わないhandler\nconst handleProps = (ownProps) => ({\n})\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n\n})\n\n// componentDidMountなどのライフサイクルを記述する\nconst lifeCycle = {\n\n}\n\nconst Enhance = compose(\n    setDisplayName(display),\n    withStateHandlers(\n        initialProps,\n        stateHandler\n    ),\n    withHandlers(handleProps),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    ),\n    lifecycle(lifeCycle),\n    onlyUpdateForKeys(canRenderProps),\n)\n\nexport default Enhance(component)","import { compose, withStateHandlers, setDisplayName, lifecycle, onlyUpdateForKeys, withHandlers } from 'recompose'\nimport { connect } from 'react-redux'\n\nimport * as WindowActions from '../modules/window'\n\nimport AppRoute from '../components/AppRoute'\n\nconst display = \"AppRoute\"\nconst component = AppRoute\n\nconst initialProps = {\n}\n\nconst canRenderProps = []\n\n// propsの値を変更する\nconst handleChange = (ownProps) => {\n    return (name, value) => {\n        return {\n            [name]: value\n        }\n    }\n}\n\n// propsの変更を行うhandler\nconst stateHandler = {\n    handleChange,\n}\n\n// propsの変更を行わないhandler\nconst handleProps = (ownProps) => ({\n})\n\nconst mapStateToProps = (state) => {\n    const { \n        windowHeight,\n        windowWidth\n     } = state.window\n     return {\n         windowHeight,\n         windowWidth\n     }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n})\n\n// componentDidMountなどのライフサイクルを記述する\nconst lifeCycle = {\n\n}\n\nconst Enhance = compose(\n    setDisplayName(display),\n    withStateHandlers(\n        initialProps,\n        stateHandler\n    ),\n    withHandlers(handleProps),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    ),\n    lifecycle(lifeCycle),\n    onlyUpdateForKeys(canRenderProps),\n)\n\nexport default Enhance(component)","import React, { Component, Fragment } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport HomeTopScreen from '../containers/home/HomeTopScreen'\n\nexport default class AppRoute extends Component {\n    render() {\n        return (\n            <Router>\n                <Fragment>\n                    <Route exact path='/portfolio' component={HomeTopScreen} />\n                    <Route path='/portfolio/works' component={HomeTopScreen} />\n                    <Route path='/portfolio/blogs' component={HomeTopScreen} />\n                </Fragment>\n            </Router>\n        )\n    }\n}","import React, { Component, Fragment } from 'react'\nimport { css, StyleSheet } from 'aphrodite'\nimport store from '../modules/store'\nimport { Provider } from 'react-redux'\n\nimport AppRoute from '../containers/AppRoute'\n\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <AppRoute />\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}